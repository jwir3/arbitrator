{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/arbitrator/Arbitrator.js","webpack:///./src/arbitrator/ArbitratorConfig.js","webpack:///./src/arbitrator/ArbitratorGoogleClient.js","webpack:///./src/arbitrator/DeviceInfo.js","webpack:///./src/arbitrator/Game.js","webpack:///./src/arbitrator/LeagueProfile.js","webpack:///./src/arbitrator/LocationService.js","webpack:///./src/arbitrator/Place.js","webpack:///./src/arbitrator/PreferenceStore.js","webpack:///./src/arbitrator/QuickCrypto.js","webpack:///./src/arbitrator/StringUtils.js","webpack:///./src/arbitrator/Strings.js","webpack:///./src/arbitrator/UIManager.js","webpack:///./src/helpers/window.js","webpack:///./src/test/Arbitrator.spec.js","webpack:///./src/test/CheckGame.js","webpack:///./src/test/DeviceInfo.spec.js","webpack:///./src/test/LeagueProfile.spec.js","webpack:///./src/test/PreferenceStore.spec.js","webpack:///./src/test/QuickCrypto.spec.js","webpack:///./temp/specs_entry.js","webpack:///external \"@google/maps\"","webpack:///external \"chai\"","webpack:///external \"crypto\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"fs-jetpack\"","webpack:///external \"googleapis\"","webpack:///external \"jquery\"","webpack:///external \"lockr\"","webpack:///external \"macaddress\"","webpack:///external \"moment\"","webpack:///external \"node-rest-client\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"typeahead\"","webpack:///external \"util\""],"names":["EventSearchObserver","aMatchFunction","aNoMatchFunction","onMatchFound","onNoMatchFound","Arbitrator","aString","mBaseString","mGames","numGames","parseFromText","mUiManager","UIManager","mGoogleClient","ArbitratorGoogleClient","prototype","replace","cols","split","mTable","Array","row","columnPointer","removedLastCol","col","trimmedCol","trim","length","oldLength","newLength","push","endsWith","pop","gm","Game","getId","findConsecutiveGames","getNumGames","getGameById","aId","getRows","getColumns","aRow","getDescription","getRole","aGameId","adjustGamesOrSubmitToCalendar","aCalendarId","self","Object","keys","gamesProcessed","callback","aGame","aCalendarEvent","adjustGameInCalendar","then","showSnackbar","Strings","games_added_message","console","log","key","hasOwnProperty","game","submitGameToCalendar","clearArbitratorInput","getAllGames","prefStore","PreferenceSingleton","instance","gameLengthMins","getTimePreference","TimePreferenceKeys","LENGTH_OF_GAME","prevGame","index","curGame","isWithinConsecutiveTimeRangeOf","getSite","getName","setConsecutiveGame","ArbitratorConfig","env","google_client_id","google_client_secret","google_api_key","client","getClient","that","Promise","resolve","reject","OAuth2","google","tokens","getAuthTokens","setCredentials","scopes","url","generateAuthUrl","access_type","scope","window","createWindow","width","height","loadURL","on","setImmediate","title","getTitle","startsWith","Error","removeAllListeners","close","code","getToken","err","setAuthTokens","getCalendarList","cal","version","auth","calendarList","list","result","items","getUserId","plus","people","get","id","aEvent","events","delete","eventToInsert","getEventJSON","insert","findGameInCalendar","oAuthClient","searchString","getEncipheredGameInfoString","req","results","foundEvent","i","calEvent","description","indexOf","catch","DEVICE_SINGLETON_KEY","Symbol","DeviceInfo","mMachineKey","mMacAddress","getEncryptedDeviceKey","getMachineIdentifier","machineId","crypto","pbkdf2Sync","os","userInfo","username","toString","error","osName","getOSName","osVersion","getOSVersion","cpuModel","getCPUModel","getMacAddress","aMacAddress","release","platform","cpus","model","macaddress","one","aError","aMac","DeviceInfoSingleton","defineProperty","global","freeze","Role","REFEREE","LINESMAN","UNKNOWN","aGroup","aRole","aTimestamp","aSportLevel","aSite","aHomeTeam","aAwayTeam","aFees","mId","mGroupId","mGroup","getAliasForGroupId","setRole","mTimestamp","mSportLevel","mSite","getPlaceForSite","mHomeTeam","mAwayTeam","mFees","mIsConsecutiveGame","getGameInfoFromCipher","aEncrypted","decipher","createDecipher","decrypted","update","final","gameInfoArray","getGroupId","getGroup","getSportLevel","getHomeTeam","getAwayTeam","getFees","getTimestampAsString","components","getTimestamp","moment","getTime12Hr","format","getISOStartDate","startDate","priorToStart","PRIOR_TO_START","isConsecutiveGame","subtract","toISOString","getISOEndDate","endDate","add","aIsConsecutive","consecutiveGameThreshold","CONSECUTIVE_GAME_THRESHOLD","aOtherTimestamp","timeStamp","date","year","month","hours","aRoleString","search","mRole","isTeamValid","aTeamName","getLevel","levelString","gameProfile","getLeagueProfile","warn","matchingGameClassificationLevel","findGameClassificationLevelMatching","getClassification","areTeamsValid","getSummaryString","summaryString","role","isScrimmage","level","isTournament","siteData","getAddress","subLocationString","hasSubLocation","getSubLocationName","String","arbitratorIdString","getGameInfoCipher","getIdentificationString","idString","cipher","createCipher","encrypted","aSiteName","placeKey","hasLocationPreference","getLocationPreference","place","Place","undefined","addLocationPreference","LeagueProfile","aProfileIdentifier","profileId","classificationLevels","addGameClassificationLevel","aGameClassificationLevel","_regenerateGameClassificationLevelIds","removeGameClassificationLevel","idx","equals","splice","getProfileId","getNumLevels","getLevels","sort","a","b","removeGameClassificationLevelById","getGameClassificationLevelById","aSearchString","firstFound","matches","setId","GameClassificationLevel","classification","regularExpression","setClassification","aclassification","setLevel","aLevel","setRegEx","aRegEx","getRegEx","aOther","aSportLevelInput","RegExp","test","LocationService","mCurrentLatitude","mCurrentLongitude","mGoogleMapsClient","require","createClient","mDistanceCircle","_getCurrentPosition","Client","data","location","position","coords","latitude","lat","longitude","lng","getPredictionsForQuery","query","aPosition","placesQueryAutoComplete","input","language","radius","response","predictions","json","nextPrediction","types","includes","aShortName","aName","aAddress","aSubLocationName","mShortName","mName","mAddress","mSubLocationName","getShortName","PREFERENCE_STORE_KEY","PreferenceStore","name","shouldStore","_retrievePreferences","UserPreferenceKeys","USER_ID","GOOGLE_AUTH_DATA","LAST_CALENDAR_ID","addGroupAlias","aGroupId","aGroupAlias","groupAliases","_verifyExtensibility","_putPreferences","addLeagueProfile","aLeagueProfile","leagueProfiles","setLeagueProfile","nextProfile","addGameClassificationLevelSetting","aProfileName","aClassification","aRegex","setting","leagueProfile","addTimePreference","aType","aTimePeriod","time","priorStart","gameLength","consecThreshold","aPlace","locations","aTimePreferenceKeys","aDefault","parseInt","getAllLeagueProfiles","aProfileId","aLocationKey","genericLoc","getAllTimePreferences","getAllLocationPreferences","getAllGroupAliases","getAllGroupAliasNamesAsSortedArray","sortedArray","prop","actualName","hasAliasedGroups","hasTimePreferences","aPreferenceKey","removeTimePreference","removeLocationPreference","removeGroupAlias","setLastCalendarId","aLastCalendarId","user","getLastCalendarId","setUserId","aUserId","removeUserId","removeAllGroupAliases","adjustGameClassificationLevel","aGroupName","aSettingId","aNewClassification","aNewLevel","aNewRegEx","profile","removeGameClassificationLevelFromProfile","aAuthTokens","JSON","stringify","storedPrefs","jetpack","cwd","_getUserHome","dir","write","read","_deserializeGameProfiles","aBaseObject","profiles","_deserializeSingleGameProfile","nextGameClassificationLevel","process","aProperty","isExtensible","newObj","x","_setLeagueProfiles","gameProfiles","_clearLeagueProfiles","QuickCrypto","deviceInfo","mMachineKeyPromise","encrypt","aData","machineKey","end","decrypt","aEncryptedString","StringUtils","capitalize","wordArray","extractedWords","value","newWord","toUpperCase","substr","join","__dirname","mBackStack","mVersion","mLocationService","onArbitrate","scheduleText","$","val","arb","calSelectionElement","document","getElementById","selectedId","selectedIndex","setVersion","aVersion","getVersion","setUIListeners","_setPreferenceOnClickHandlers","_setHeaderScrollListener","_setNavDrawerOnClickHandlers","_setArbitrateOnClickHandler","_setLogoutOnClickHandler","_setDismissSnackBarOnClickHandler","refreshPreferences","_hidePreferencesBasedOnFeatureFlags","refreshTimePreferences","refreshAliasPreferences","refreshLocationPreferences","refreshProfilePreferences","aliases","_addLeagueProfileSubMenu","refreshGameClassificationLevelPreferences","off","click","_createNewGameClassificationLevelSetting","children","remove","loadPartialContent","gameClassificationSettings","levels","gameClassificationIdx","gameClassificationPref","settingUI","dataSettingId","inputClassification","find","inputLevel","inputRegex","removeButton","modifyButton","attr","parentElement","parent","inputClassificationWithId","inputLevelWithId","inputRegexWithId","util","game_age_preference_updated","append","timePrefs","locPrefs","html","aliasedGroups","groupAlias","addAliasUIFor","setTimePreferenceFromUI","aTimePrefName","timePrefVal","setArbiterAuthenticationFromUI","arbiterUsername","arbiterPassword","setArbiterAuthentication","dataElement","_setAliasPreferenceOnClickHandlers","aMessage","text","show","setTimeout","hide","addAliasToPrefStore","aAliasName","setLocationPreference","aLocationPrefKey","aLocationPrefName","addressElement","address","subLocationElement","subLocationName","_isLocationAddressPlaceholderDefault","_isLocationSublocationPlaceholderDefault","prefName","addressConfirmed","address_for_set","deleteLocationPreference","deleteAliasPreference","addressTextInputId","subLocationTextInputId","addressPlaceholderText","enter_address_for","subLocationPlaceholderText","Typeahead","locService","source","_setLocationPreferenceOnClickHandlers","openNavDrawer","css","closeNavDrawer","aPartialContentPath","loadContent","aContentFileName","aTitle","aOnComplete","load","_addToBackStack","_isBackStackEmpty","_showBackArrow","_showHamburgerIcon","refreshGoogleClient","aGoogleClient","populateCalendarList","populateUserId","lastCalendarId","calendarSelector","noCalendarSelectedOption","select_calendar","selectEle","calendarIdx","calendarItem","listItem","summary","calChildren","each","childNumber","currentChild","change","event","target","selectedOptions","feature_arbiter_sports_login","_setTimePreferenceOnClickHandlers","_setArbiterConnectionPreferenceOnClickHandlers","_setConnectionButtonVisible","isVisible","BrowserWindow","app","remote","ipcRenderer","aspAuth","Lockr","send","message","set","wasSuccessful","minutes","priorToStartAcknowledge","calendar_events_will_start","gameLengthAcknowledge","calendar_events_length","consecutiveThresh","consecutiveAcknowledge","consecutive_games_acknowledgement","aliasName","fadeOut","locationShortName","locationName","scroll","scrollTop","logout","rawData","unspacedData","_bindEventHandlerForNavMenu","aIsBack","unbind","_popBackStack","aBackStackEntry","lastEntry","_getBackStackSize","aJQueryObject","defaultPlaceholderPrefix","slice","regex","age","profileName","partialContent","partialContentDOM","options","userDataDir","getPath","stateStoreFile","defaultSize","icon","state","win","restore","restoredState","assign","getCurrentPosition","getPosition","size","getSize","y","windowWithinBounds","windowState","bounds","resetToDefaults","screen","getPrimaryDisplay","ensureVisibleOnSomeDisplay","visible","getAllDisplays","some","display","saveState","isMinimized","isMaximized","atomic","singleGame","basicSchedule","complexSchedule","testProfiles","describe","beforeEach","LeagueProfiles","afterEach","it","expect","to","have","lengthOf","arbitrator","not","be","null","equal","firstGame","checkGame","DONTCARE","game1","expectedSS1","game2","expectedSS2","ok","gameJson","start","dateTime","notes","expectedFirstStartTime","expectedSecondStartTime","assert","testString","eq","gameInfo","groupId","gameId","aArbitrator","aExpectedGroup","aExpectedRole","aExpectedMonth","aExpectedDayOfMonth","aExpectedYear","aExpectedHourOfDay","aExpectedMinuteOfHour","aExpectedLevel","aExpectedSite","aExpectedHomeTeam","aExpectedAwayTeam","aExpectScrimmage","aExpectTournament","hour","minute","fail","isExpectScrimmage","isExpectTournament","done","machineKey1","machineKey2","macAddress","expectedMachineId","eql","numSections","section","gal","gal1","gal2","prefStore1","prefStore2","GameClassificationLevelMatching","district6Profile","retrieved","aliasNames","quickCrypto","expectedPassword","encryptedVersion","empty","decryptedVersion"],"mappings":"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","file":"specs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./temp/specs_entry.js\");\n","import { Game } from './Game.js';\nimport { UIManager } from './UIManager';\nimport { PreferenceSingleton, TimePreferenceKeys } from './PreferenceStore';\nimport { ArbitratorGoogleClient } from './ArbitratorGoogleClient';\nimport { Strings } from './Strings';\n\n/**\n * An object for combining two callbacks for what to do when searching for Google\n * Calendar events.\n *\n * @param aMatchFunction The function to call when a matching event is found in\n *        the Google Calendar. Syntax for calling this method:\n *        onMatchFound(aGame, aCalendarEvent)\n *        where aGame represents the Game object which was searched for, and\n *        aCalendarEvent represents the Google Calendar Event object representing\n *        the event in the calendar.\n * @param aNoMatchFunction The function to call when the completed search did not\n *        find a match for a given Game object. Syntax for calling this method:\n *        onNoMatchFound(aGame)\n *        where aGame represents the Game object which was searched for.\n */\nvar EventSearchObserver = function(aMatchFunction, aNoMatchFunction) {\n  this.onMatchFound = aMatchFunction;\n  this.onNoMatchFound = aNoMatchFunction;\n}\n\nexport var Arbitrator = function(aString) {\n  this.mBaseString = aString;\n  this.mGames = {};\n  this.numGames = 0;\n  this.parseFromText();\n  this.mUiManager = new UIManager();\n  this.mGoogleClient = new ArbitratorGoogleClient();\n}\n\nArbitrator.prototype = {\n  parseFromText: function() {\n    this.mBaseString = this.mBaseString.replace(/Accepted\\ on\\ [0-9]+\\/[0-9]+\\/([0-9]{4})/g, '')\n    var cols = this.mBaseString.split(/[\\t\\n]+/);\n    this.mTable = new Array();\n    var row = new Array();\n    var columnPointer = 0;\n    var removedLastCol= false;\n    for (var col in cols) {\n      // col is our GLOBAL column pointer - the index of the current column in\n      // the whole set of all columns. columnPointer is the relative colum\n      // pointer - the index of the column in the current row.\n      var trimmedCol = cols[col].trim();\n      if (trimmedCol.length != 0) {\n        var oldLength = row.length;\n        var newLength = row.push(trimmedCol);\n\n      } else if (columnPointer == 1){\n        row.push(\"NONE\");\n      }\n\n      // Special date handling, in the event that we actually have a newline in\n      // between where the date is and where the time is (this happens occasionally)\n      if (columnPointer == 4\n          && (row[columnPointer].endsWith(\"PM\")\n              || row[columnPointer].endsWith(\"AM\"))) {\n        row[columnPointer-1] = row[columnPointer-1] + \" \" + row[columnPointer];\n        row.pop();\n        columnPointer = columnPointer - 1;\n      }\n\n      columnPointer = columnPointer + 1;\n      if (columnPointer == 9) {\n        this.mTable.push(row);\n        var gm = new Game(row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8]);\n        row = new Array();\n        this.mGames[gm.getId()] = gm;\n        this.numGames++;\n        columnPointer = 0;\n      }\n    }\n\n    this.findConsecutiveGames();\n  },\n\n  getNumGames: function() {\n    return this.numGames;\n  },\n\n  getGameById: function(aId) {\n    if (this.mGames[aId]) {\n      return this.mGames[aId];\n    }\n\n    return null;\n  },\n\n  getRows: function() {\n    return this.mTable;\n  },\n\n  getColumns: function(aRow) {\n    return this.mTable[aRow];\n  },\n\n  getDescription: function(aRow) {\n    // Game description is column 5\n    return this.mTable[aRow][5];\n  },\n\n  /**\n   * @returns 0, if the row is a referee assignment; 1, if the row is a linesman\n   *          assignment; -1 otherwise.\n   */\n  getRole: function(aGameId) {\n    return this.mGames[aGameId].getRole();\n  },\n\n//   /**\n//    * Notify the user that a game was added to his/her calendar.\n//    */\n//   // notifyGameAdded: function(aGame) {\n//   //   this.mUiManager.setMessage('Game #' + aGame.getId() + ' was added to Google Calendar.');\n//   //   this.mUiManager.refreshPreferences();\n//   // },\n//\n//   /**\n//    * Notify the user that a game was adjusted on his/her calendar.\n//    */\n//   // notifyGameAdjusted: function(aGame) {\n//   //   this.mUiManager.setMessage('Game #' + aGame.getId() + ' was adjusted in Google Calendar.');\n//   // },\n\n  /**\n   * Submit games in Arbitrator to Google Calendar.\n   *\n   * If any games in this object correspond to games already listed in Google\n   * Calendar, then these games will be updated with new date/time information.\n   * If a game does not already exist in Google Calendar, then it will be added\n   * using the submitGameToCalendar() function.\n   *\n   * @param aCalendarId The ID of the calendar where the games should be placed.\n   */\n  adjustGamesOrSubmitToCalendar: function(aCalendarId) {\n    // Save this pointer so it can be used in the callback.\n    var self = this;\n    var numGames = Object.keys(this.mGames).length;\n    var gamesProcessed = 0;\n    var callback = new EventSearchObserver(\n      function(aGame, aCalendarEvent) {\n        self.mGoogleClient.adjustGameInCalendar(aCalendarId, aCalendarEvent, aGame)\n          .then(() => {\n            gamesProcessed++;\n            if (gamesProcessed == numGames) {\n              self.mUiManager.showSnackbar(Strings.games_added_message);\n            }\n          });\n      },\n\n      function(aGame) {\n        console.log(\"Saw no match\");\n      });\n\n    for (var key in this.mGames) {\n      if (this.mGames.hasOwnProperty(key)) {\n        var game = this.mGames[key];\n        // self.mGoogleClient.findGameInCalendar(aCalendarId, game)\n          // .then((foundEventId) => {\n            // if (!foundEventId) {\n              // var googleClient = new ArbitratorGoogleClient();\n              self.mGoogleClient.submitGameToCalendar(aCalendarId, game)\n                .then(() => {\n                  gamesProcessed++;\n                  if (gamesProcessed == numGames) {\n                    self.mUiManager.showSnackbar(Strings.games_added_message);\n                    self.mUiManager.clearArbitratorInput();\n                  }\n              });\n            // } else {\n              // console.log(\"Game found with event id: \" + foundEventId);\n            // }\n          // });\n      }\n    }\n  },\n\n  /**\n   * Retrieve all games in this Arbitrator object.\n   *\n   * @return An array of all Game objects known about by this Arbitrator\n   * instance.\n   */\n  getAllGames: function() {\n    return this.mGames;\n  },\n\n  /**\n   * Search through all games to find those that are consecutive.\n   *\n   * Note that this does not currently search through calendar history. That is,\n   * only games that are entered together in the same Arbitrator object are\n   * under consideration for being linked in a consecutive manner.\n   */\n  findConsecutiveGames: function() {\n    var prefStore = PreferenceSingleton.instance;\n    var gameLengthMins = prefStore.getTimePreference(TimePreferenceKeys.LENGTH_OF_GAME, 60);\n    var prevGame;\n    for (var index in this.mGames) {\n      var curGame = this.mGames[index];\n      if (prevGame\n          && curGame.isWithinConsecutiveTimeRangeOf(prevGame)\n          && curGame.getSite().getName() == prevGame.getSite().getName()) {\n          curGame.setConsecutiveGame(true);\n        }\n\n        prevGame = curGame;\n      }\n  }\n}\n","import { remote } from 'electron';\nimport env from 'env';\n\nexport var ArbitratorConfig = {\n  /**\n   * Set this value to the Google Web Application Client ID you generated when\n   * creating a new OAuth2 permission in your Google Developer Console.\n   */\n\n  // NOTE: These values should all be injected, based on the appropriate\n  //       environment, during the build.\n  'google_client_id': env.google_client_id,\n  'google_client_secret': env.google_client_secret,\n  'google_api_key': env.google_api_key,\n\n  // Feature flags below this line.\n  'feature_arbiter_sports_login': false,\n};\n","import { ArbitratorConfig } from './ArbitratorConfig'\nimport * as google from 'googleapis'\nimport createWindow from '../helpers/window';\nimport { PreferenceSingleton, TimePreferenceKeys } from './PreferenceStore';\nimport { Game } from './Game';\nimport { Strings } from './Strings';\n\n// Specify default options to be used with all requests.\n// google.options({ proxy: 'http://localhost:5555' });\n\n/**\n * Create a new instance of an ArbitratorGoogleClient object for use with Arbitrator.\n *\n * @param aOptionalCallback (Optional) A callback to be called when the\n *        ArbitratorGoogleClient has finished its initialization.\n */\nexport var ArbitratorGoogleClient = function() {\n}\n\nArbitratorGoogleClient.prototype = {\n  client: null,\n\n  getClient: function() {\n    var that = this;\n    return new Promise((resolve, reject) => {\n      var prefStore = PreferenceSingleton.instance;\n      var OAuth2 = google.auth.OAuth2;\n      that.client = new OAuth2(\n        ArbitratorConfig.google_client_id,\n        ArbitratorConfig.google_client_secret,\n        'urn:ietf:wg:oauth:2.0:oob' // Instruct google to return the auth code via the title\n      );\n\n      var tokens = prefStore.getAuthTokens();\n      if (tokens) {\n        that.client.setCredentials(tokens);\n        resolve(that.client);\n      } else {\n        var scopes = [\n          'https://www.googleapis.com/auth/calendar',\n          'https://www.googleapis.com/auth/userinfo.profile'\n        ];\n\n        var url = that.client.generateAuthUrl({\n          // 'online' (default) or 'offline' (gets refresh_token)\n          access_type: 'offline',\n          scope: scopes\n        });\n\n        var window = createWindow('googleAuth', {width: 400, height:650});\n        window.loadURL(url);\n\n        window.on('page-title-updated', () => {\n          setImmediate(() => {\n            const title = window.getTitle();\n            if (title.startsWith('Denied')) {\n              reject(new Error(title.split(/[ =]/)[2]));\n              window.removeAllListeners('closed');\n              window.close();\n            } else if (title.startsWith('Success')) {\n              var code = title.split(/[ =]/)[2];\n              that.client.getToken(code, function (err, tokens) {\n                // Now tokens contains an access_token and an optional refresh_token. Save them.\n                if (!err) {\n                  that.client.setCredentials(tokens);\n                  var prefStore = PreferenceSingleton.instance;\n                  prefStore.setAuthTokens(tokens);\n                  resolve(that.client);\n                  window.removeAllListeners('closed');\n                  window.close();\n                }\n              });\n            }\n          });\n        });\n      }\n    });\n  },\n\n  getCalendarList: function() {\n    var that = this;\n    return new Promise((resolve, reject) => {\n      var cal = google.calendar({\n        version: 'v3',\n        auth: that.client\n      });\n\n      cal.calendarList.list(null, null,\n        function (err, result) {\n          if (err) {\n            reject(err);\n          }\n\n          resolve(result.items);\n      });\n    });\n  },\n\n  getUserId: function() {\n    var that = this;\n    return new Promise((resolve, reject) => {\n      var plus = google.plus({version: 'v1', auth: that.client});\n      plus.people.get({'userId': 'me'}, function(err, result) {\n        if (err) {\n          reject(err);\n        }\n\n        resolve(result.id);\n      });\n    });\n  },\n\n  /**\n   * Adjust a game that is already in Google Calendar to have new data.\n   *\n   * This is accomplished by removing the current event in Google Calendar and\n   * adding a new event with the corresponding data. No checking is done to\n   * determine if these two events represent the same game.\n   *\n   * @param aCalendarId The id of the calendar which should have the event.\n   * @param aEvent The event data structure given from Google that should be\n   *        deleted.\n   * @param aGame The game data structure that has the new data.\n   */\n  adjustGameInCalendar: function(aCalendarId, aEvent, aGame) {\n    var that = this;\n    return new Promise((resolve, reject) => {\n      that.getToken(() => {\n        var cal = google.calendar({\n          version: 'v3',\n          auth: that.client\n        });\n\n        // First, delete the old event.\n        cal.events.delete({\n          'calendarId' : aCalendarId,\n          'eventId' : aEvent.id\n        }, function (err, result) {\n            if (err) {\n              reject(err);\n            } else {\n              // Now, submit the new event.\n              return submitGameToCalendar(aCalendarId, aGame);\n            }\n        });\n      });\n    });\n  },\n\n  /**\n   * Submits a game to Google Calendar using the javascript REST api.\n   *\n   * @param aCalendarId The id of the calendar which should have the event.\n   * @param aGame The Game to submit to the calendar.\n   */\n  submitGameToCalendar: function(aCalendarId, aGame) {\n    var that = this;\n    return new Promise((resolve, reject) => {\n      that.getClient().then((client) => {\n        var eventToInsert = aGame.getEventJSON();\n\n        var cal = google.calendar({\n          version: 'v3',\n          auth: client\n        });\n\n        cal.events.insert({\n          'calendarId' : aCalendarId,\n          'resource' : eventToInsert\n        }, {}, function (err, result) {\n          if (!err) {\n            resolve();\n          } else {\n            reject(err);\n          }\n        });\n      });\n    });\n  },\n\n  /**\n   * Find a game within a given calendar.\n   *\n   * @param aCalendarId The google calendar id for the calendar which should be\n   *        searched for events.\n   * @param aGame The game that should be searched for within the calendar.\n   * @param aCallback An object with two functions: foundMatchingEvent() and\n   *        noMatchingEventFound(), representing logic to perform when an event\n   *        was found or not found, respectively.\n   */\n  findGameInCalendar: function(aCalendarId, aGame) {\n    return new Promise((resolve, reject) => {\n      var that = this;\n      that.getClient().then((oAuthClient) => {\n        var cal = google.calendar({\n          version: 'v3',\n          auth: oAuthClient\n        });\n\n        var searchString = aGame.getEncipheredGameInfoString();\n        var req = cal.events.list({\n          'calendarId' : aCalendarId\n        }, {}, function (err, result) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          var results = result.items;\n          var foundEvent = false;\n          for (var i = 0; i < results.length; i++) {\n            var calEvent = results[i];\n            if (calEvent.description\n                && calEvent.description.indexOf(searchString) > 0) {\n                resolve(calEvent);\n                return;\n            }\n          }\n\n          if (!foundEvent) {\n            resolve();\n          }\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n    });\n  },\n};\n","import macaddress from 'macaddress';\nimport os from 'os';\nimport crypto from 'crypto';\n\nconst DEVICE_SINGLETON_KEY = Symbol(\"DeviceInfo\");\n\nvar DeviceInfo = function() {\n\n}\n\nDeviceInfo.prototype = {\n  mMachineKey: null,\n  mMacAddress: null,\n\n  getEncryptedDeviceKey: function() {\n    var self = this;\n    return new Promise((resolve, reject) => {\n      if (self.mMachineKey != null) {\n        resolve(self.mMachineKey);\n      }\n\n      self.getMachineIdentifier()\n        .then((machineId) => {\n          self.mMachineKey = crypto.pbkdf2Sync(machineId, os.userInfo().username,\n                                               1, 32, 'sha512').toString('hex')\n          resolve(self.mMachineKey);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  },\n\n  getMachineIdentifier: function() {\n    var self = this;\n    return new Promise((resolve, reject) => {\n      var osName = self.getOSName();\n      var osVersion = self.getOSVersion();\n      var cpuModel = self.getCPUModel();\n      self.getMacAddress()\n      .then((aMacAddress) => {\n        resolve(osName + osVersion + cpuModel + aMacAddress);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n    });\n  },\n\n  getOSVersion: function() {\n    return os.release();\n  },\n\n  getOSName: function() {\n    return os.platform();\n  },\n\n  getCPUModel: function() {\n    return os.cpus()[0].model;\n  },\n\n  getMacAddress: function() {\n    var self = this;\n\n    return new Promise((resolve, reject) => {\n      if (self.mMacAddress) {\n        resolve(self.mMacAddress);\n      }\n\n      macaddress.one(function(aError, aMac) {\n        if (aError) {\n          reject (new Error(aError));\n        }\n\n        self.mMacAddress = aMac;\n        resolve(self.mMacAddress);\n      });\n    });\n  }\n};\n\nexport var DeviceInfoSingleton = {};\n\nObject.defineProperty(DeviceInfoSingleton, \"instance\", {\n  get: function() {\n    if (!global[DEVICE_SINGLETON_KEY]) {\n      global[DEVICE_SINGLETON_KEY] = new DeviceInfo();\n    }\n\n    return global[DEVICE_SINGLETON_KEY];\n  }\n});\n\nObject.freeze(DeviceInfoSingleton);\n","import  crypto from 'crypto';\nimport { Place } from './Place'\nimport { PreferenceSingleton, TimePreferenceKeys } from './PreferenceStore'\nimport * as moment from 'moment';\nimport * as Strings from 'Strings';\n\n/**\n * Enumeration for Roles. Currently, an official (for hockey) can be one of the\n * following:\n *\n *  - A Referee\n *  - A Linesman\n *  - An unknown role\n *\n * No other roles are supported at this time. In the future, it would be nice to\n * support other roles, but it's unclear how long this polyfill for lack of\n * Google calendar support in AS will last.\n */\nexport var Role = Object.freeze({\n  REFEREE: 0,\n  LINESMAN: 1,\n  UNKNOWN: -1\n});\n\nexport var Game = function (aId, aGroup, aRole, aTimestamp, aSportLevel, aSite,\n                            aHomeTeam, aAwayTeam, aFees) {\n  var prefStore = PreferenceSingleton.instance;\n  this.mId = aId;\n  this.mGroupId = aGroup;\n  this.mGroup = prefStore.getAliasForGroupId(this.mGroupId);\n  this.setRole(aRole);\n  this.mTimestamp = aTimestamp;\n  this.mSportLevel = aSportLevel;\n  this.mSite = this.getPlaceForSite(aSite);\n  this.mHomeTeam = aHomeTeam;\n  this.mAwayTeam = aAwayTeam;\n  this.mFees = aFees;\n  this.mIsConsecutiveGame = false;\n}\n\n// Static methods on Game class\n\n/**\n * Retrieve a data structure containing the game id and group id, given an\n * encrypted form of them.\n *\n * @param  {String} aEncrypted Encrypted form of game information.\n *\n * @return {String} The unencrypted version of the identifying game information.\n */\nGame.getGameInfoFromCipher = function(aEncrypted) {\n    const decipher = crypto.createDecipher('aes-256-ofb', 'gameHash');\n    var decrypted = decipher.update(aEncrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n\n    var gameInfoArray = decrypted.split('-##-');\n    return {\n      'groupId': gameInfoArray[0],\n      'gameId': gameInfoArray[1]\n    }\n}\n\n// Game class member methods\n\nGame.prototype = {\n  getId: function() {\n    return this.mId;\n  },\n\n  getGroupId: function() {\n    return this.mGroupId;\n  },\n\n  getGroup: function() {\n    return this.mGroup;\n  },\n\n  getSportLevel: function() {\n    return this.mSportLevel;\n  },\n\n  getSite: function() {\n    return this.mSite;\n  },\n\n  getHomeTeam: function() {\n    return this.mHomeTeam;\n  },\n\n  getAwayTeam: function() {\n    return this.mAwayTeam;\n  },\n\n  getFees: function() {\n    return this.mFees;\n  },\n\n  getTimestampAsString: function() {\n    // Retrieves the arbiter-printed string, which currently has the format:\n    // MM/DD/YYYY h:MM A\n    var components = this.mTimestamp.split(\" \");\n    return components[0] + \" \" + components[2] +  \" \" + components[3];\n  },\n\n  /**\n   * Retrieve the moment for which this game starts.\n   *\n   * @return {Moment} A Moment.js moment for which this game is set to start,\n   *                  based on the data from ArbiterSports.\n   */\n  getTimestamp: function() {\n    return moment(this.getTimestampAsString(), \"MM/DD/YYYY h:mm a\");\n  },\n\n  getTime12Hr: function() {\n    return this.getTimestamp().format(\"h:mma\");\n  },\n\n  getISOStartDate: function() {\n    var prefStore = PreferenceSingleton.instance;\n    var startDate = this.getTimestamp();\n    var priorToStart = prefStore.getTimePreference(TimePreferenceKeys.PRIOR_TO_START, 30);\n    if (this.isConsecutiveGame()) {\n      priorToStart = 0;\n    }\n\n    return startDate.subtract(priorToStart, 'minutes').toISOString();\n  },\n\n  getISOEndDate: function() {\n    var prefStore = PreferenceSingleton.instance;\n    var endDate = this.getTimestamp();\n\n    // Default to 1 hour if no time preference is specified.\n    var gameLengthMins = prefStore.getTimePreference(TimePreferenceKeys.LENGTH_OF_GAME, 60);\n    return endDate.add(gameLengthMins, 'minutes').toISOString();\n  },\n\n  /**\n   * Determines if this game is a consecutive game (a game where the preceding\n   * game is at the same site and ended within two hours of the start of this\n   * game).\n   *\n   * @return true, if this game is a consecutive game; false, otherwise.\n   */\n  isConsecutiveGame: function() {\n    return this.mIsConsecutiveGame;\n  },\n\n  /**\n   * Set whether or not this game is a consecutive game (a game where the\n   * preceding game is at the same site and ended within two hours of the start\n   * of this game).\n   *\n   * @param aIsConsecutive Whether or not this is a consecutive game\n   */\n  setConsecutiveGame: function(aIsConsecutive) {\n    this.mIsConsecutiveGame = aIsConsecutive;\n  },\n\n  /**\n   * Determines if this game is within the time range (within the same day and\n   * within the consecutive game threshold) necessary to be considered for a\n   * possible consecutive game with another game.\n   *\n   * @param aGame A Game for which this game should be determined to follow by\n   *        less than the threshold for consecutive games.\n   *\n   * @return true, if this Game is within the time range necessary to make it a\n   *         potential consecutive game; false, otherwise.\n   */\n  isWithinConsecutiveTimeRangeOf: function(aGame) {\n    var prefStore = PreferenceSingleton.instance;\n    var consecutiveGameThreshold = prefStore.getTimePreference(TimePreferenceKeys.CONSECUTIVE_GAME_THRESHOLD, 2);\n    var aOtherTimestamp = aGame.getTimestamp();\n    var timeStamp = this.getTimestamp();\n    return aOtherTimestamp.date() == timeStamp.date()\n           && aOtherTimestamp.year() == timeStamp.year()\n           && aOtherTimestamp.month() == timeStamp.month()\n           && aOtherTimestamp.hours() + consecutiveGameThreshold >= timeStamp.hours()\n  },\n\n  setRole: function(aRoleString) {\n    // Role is column 3, and can be either \"Referee\" or \"Linesman\".\n    if (aRoleString.search(/referee/i) != -1) {\n      this.mRole = Role.REFEREE;\n    } else if (aRoleString.search(/linesman/i) != -1) {\n      this.mRole = Role.LINESMAN;\n    } else {\n      this.mRole = Role.UNKNOWN;\n    }\n  },\n\n  isTeamValid: function(aTeamName) {\n    switch(aTeamName) {\n      case 'TBD':\n        return false;\n      case 'TBA':\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  getLevel: function() {\n    var levelString = this.getSportLevel();\n    var prefStore = PreferenceSingleton.instance;\n\n    // Load all game level preferences for the given group.\n    var gameProfile = prefStore.getLeagueProfile(this.getGroup());\n\n    if (!gameProfile) {\n      console.warn(`No game age profile was found for group '${this.getGroup()}'. Unable to resolve game age level '${levelString}'`);\n      return 'UNKNOWN';\n    }\n\n    // Find one where the regex matches.\n    var matchingGameClassificationLevel = gameProfile.findGameClassificationLevelMatching(levelString);\n    if (!matchingGameClassificationLevel) {\n      console.warn(`Unable to find game age/level matching ${levelString} in profile for '${this.getGroup()}'`);\n      return 'UNKNOWN';\n    }\n\n    return matchingGameClassificationLevel.getClassification() + \" \" + matchingGameClassificationLevel.getLevel();\n  },\n\n  areTeamsValid: function() {\n    return this.isTeamValid(this.mHomeTeam) && this.isTeamValid(this.mAwayTeam);\n  },\n\n  getSummaryString: function() {\n    var summaryString = \"\";\n    if (this.getGroup() != \"NONE\") {\n      summaryString = summaryString + \"[\" + this.getGroup() + \"] \";\n    }\n\n    var role = this.getRole();\n    if (role == Role.REFEREE) {\n      summaryString = summaryString + Strings.referee + \" \";\n    } else if (role == Role.LINESMAN) {\n      summaryString = summaryString + Strings.linesman + \" \";\n    } else {\n      summaryString = summaryString + Strings.officiate + \" \";\n    }\n\n   if (this.isScrimmage()) {\n      summaryString = summaryString + Strings.scrimmage + \" \";\n   }\n\n   if (this.areTeamsValid()) {\n      summaryString = summaryString + this.mHomeTeam + \" v \" + this.mAwayTeam + \" \";\n   }\n\n   var level = this.getLevel();\n   if (level != 'UNKNOWN') {\n     summaryString = summaryString + \"(\" + level + (this.isTournament() ? \" \" + Strings.tournament : \"\") + \")\";\n   }\n\n   return summaryString.trim();\n  },\n\n  getRole: function() {\n    return this.mRole;\n  },\n\n  getEventJSON: function() {\n    var siteData = this.getSite().getAddress() ? this.getSite().getAddress() : this.getSite().getName();\n    var subLocationString = this.getSite().hasSubLocation() ? \"\\n\\n\" + Strings.rink + \" \" + this.getSite().getSubLocationName() : \"\";\n    return  {\n      \"end\": {\n        \"dateTime\": this.getISOEndDate()\n      },\n      \"start\": {\n        \"dateTime\": this.getISOStartDate()\n      },\n      \"location\": siteData,\n      \"description\": \"Game starts at \" + String(this.getTime12Hr())\n                     + subLocationString\n                     + \"\\n\\n\"\n                     + this.getEncipheredGameInfoString(),\n      \"summary\": this.getSummaryString()\n    };\n  },\n\n  getEncipheredGameInfoString: function() {\n    var arbitratorIdString = Strings.arbitrator_identifier_description;\n    return \"{\" + arbitratorIdString + \": \" + String(this.getGameInfoCipher()) + \"}\";\n  },\n\n  isScrimmage: function() {\n    return this.getSportLevel().search(/scrimmage/i) != -1;\n  },\n\n  isTournament: function() {\n    return this.getSportLevel().search(/tournament/i) != -1;\n  },\n\n  /**\n   * Retrieve an identification string for this game. Essentially, this is\n   * just a concatenation of the game id, the group, teams playing, and level.\n   *\n   * @return A string that is an identifier for this game. This identifier should\n   *         not change, even if the game dates/times change.\n   */\n   getIdentificationString: function() {\n      var idString = String(this.getGroupId() + \"-##-\" + this.getId());\n\n      return idString.replace(/\\s+/gm, \"\");\n   },\n\n  /**\n   * Retrieve an encrypted version of the unique identifying information of this\n   * game. This serves to identify the game if the date/time changes.\n   *\n   * @return {String} An encrypted version of the game identification string.\n   */\n  getGameInfoCipher: function() {\n    var self = this;\n    const cipher = crypto.createCipher('aes-256-ofb', 'gameHash');\n    var encrypted = cipher.update(self.getIdentificationString(), 'utf8', 'hex');\n    encrypted += cipher.final('hex');\n\n    return encrypted;\n  },\n\n\n  /**\n   * Retrieve a Place object for some existing site string.\n   *\n   * @param aSiteName The textual name of the site, as passed in from ArbiterSports.\n   *\n   * @returns A Place object with name equivalent to aSiteName, but with an address\n   *          if one was found in the preference store.\n   */\n  getPlaceForSite: function(aSiteName) {\n    // Convert the site name to a key\n    var placeKey = aSiteName.replace(/\\s/g, '');\n\n    var prefStore = PreferenceSingleton.instance;\n    if (prefStore.hasLocationPreference(placeKey)) {\n      return prefStore.getLocationPreference(placeKey);\n    }\n\n    var place = new Place(placeKey, aSiteName, undefined, \"\");\n    prefStore.addLocationPreference(place);\n    return place;\n  }\n}\n","/**\n * Create a new {LeagueProfile} object.\n *\n * @param {string} aProfileIdentifier The identifier to use for the new profile.\n *        It should be unique.\n */\nexport var LeagueProfile = function(aProfileIdentifier) {\n  this.profileId = aProfileIdentifier;\n  this.classificationLevels = [];\n}\n\n/**\n * A profile containing {GameClassificationLevel}s. Typically, the profile will\n * be associated with a group, but it can conceivably be associated with any\n * string.\n */\nLeagueProfile.prototype = {\n  profileId: null,\n  classificationLevels: [],\n\n  /**\n   * Add a new {GameClassificationLevel} to this {LeagueProfile}.\n   *\n   * @param {GameClassificationLevel} aGameClassificationLevel The new {GameClassificationLevel} to add.\n   */\n  addGameClassificationLevel: function(aGameClassificationLevel) {\n    this.classificationLevels.push(aGameClassificationLevel);\n    this._regenerateGameClassificationLevelIds();\n  },\n\n  /**\n   * Remove an existing {GameClassificationLevel} from this {LeagueProfile}.\n   *\n   * @param  {GameClassificationLevel} aGameClassificationLevel The {GameClassificationLevel} object to remove from this {LeagueProfile}.\n   */\n  removeGameClassificationLevel: function(aGameClassificationLevel) {\n    for (var idx in this.classificationLevels) {\n      if (this.classificationLevels[idx].equals(aGameClassificationLevel)) {\n        this.classificationLevels.splice(idx, 1);\n        this._regenerateGameClassificationLevelIds();\n      }\n    }\n  },\n\n  getProfileId: function() {\n    return this.profileId;\n  },\n\n  getNumLevels: function() {\n    return this.classificationLevels.length;\n  },\n\n  /**\n   * Retrieve the {GameClassificationLevel} objects held in this\n   * {LeagueProfile}, sorted first by classification, then by level.\n   *\n   * @return {Array} An array of {GameClassificationLevel}s, sorted in\n   *                 alphabetical order.\n   */\n  getLevels: function() {\n    return this.classificationLevels.sort(function(a, b) {\n      if (a.getClassification() == b.getClassification()) {\n        if (a.getLevel() < b.getLevel()) {\n          return -1;\n        } else if (a.getLevel() == b.getLevel()) {\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (a.getClassification() < b.getClassification()) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n  },\n\n  /**\n   * Remove a {GameClassificationLevel} by its id.\n   *\n   * @param {string} aId An identifier string to match against.\n   */\n  removeGameClassificationLevelById: function(aId) {\n    for (var idx in this.classificationLevels) {\n      if (this.classificationLevels[idx].getId() == aId) {\n        this.classificationLevels.splice(idx, 1);\n        this._regenerateGameClassificationLevelIds();\n        return;\n      }\n    }\n  },\n\n  /**\n   * Retrieve a {GameClassificationLevel} by its id.\n   *\n   * @param {string} aId An identifier string to match against.\n   *\n   * @return A {GameClassificationLevel}, if one exists that has id == aId; null,\n   *         otherwise.\n   */\n  getGameClassificationLevelById: function(aId) {\n    for (var i = 0; i < this.classificationLevels.length; i++) {\n      if (this.classificationLevels[i].getId() == aId) {\n        return this.classificationLevels[i];\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Find a {GameClassificationLevel} matching the given search string, if one exists.\n   *\n   * @param {string} aSearchString The string to compare against regular\n   *        expressions in each of the {GameClassificationLevel}s contained in this\n   *        {LeagueProfile}.\n   * @return {Object} The first {GameClassificationLevel} whose regular expression matches\n   *         the search string, if one exists; null, otherwise.\n   */\n  findGameClassificationLevelMatching: function(aSearchString) {\n    var firstFound = null;\n    for (var idx in this.classificationLevels) {\n      if (this.classificationLevels[idx].matches(aSearchString)) {\n        if (!firstFound) {\n          firstFound = this.classificationLevels[idx];\n        } else {\n          console.warn(`There are multiple game classifications that match the search string '${aSearchString}'. You may have overlapping regular expressions.`);\n        }\n      }\n    }\n\n    return firstFound;\n  },\n\n  /**\n   * Regenerate all ids for {GameClassificationLevel} settings within this\n   * {LeagueProfile}.\n   */\n  _regenerateGameClassificationLevelIds: function() {\n    for (var idx in this.classificationLevels) {\n      this.classificationLevels[idx].setId(idx);\n    }\n  }\n}\n\n/**\n * Create a new GameClassificationLevel.\n *\n * @param {String} classification    The classification of this new\n *                                   {GameClassificationLevel}. This can be an\n *                                   age group (e.g. \"Bantam\" or \"Squirt\"), or\n *                                   a gender classification (e.g. \"Boys\").\n * @param {String} level             The level of play for the new object. This\n *                                   can be a recreational level (e.g. A, B, C),\n *                                   or some other level descriptor (e.g.\n *                                   Varsity).\n * @param {String} regularExpression The regular expression which will be used\n *                                   to match sport levels of input strings\n *                                   with the new object.\n */\nexport var GameClassificationLevel = function (classification, level, regularExpression) {\n  this.classification = classification;\n  this.level = level;\n  this.regularExpression = regularExpression;\n}\n\n/**\n * A data structure representing a {Game} object's classification and ability\n * level.\n *\n * Each object contains a regular expression to search for, along with\n * a classification bracket (can be numeric or a name, such as 'Bantam'), and a\n * level (e.g. 'A', 'B', Varsity, etc...).\n *\n * This can then be compared to inputs given in a particular game to determine\n * if it matches.\n *\n * @type {GameClassificationLevel}\n */\nGameClassificationLevel.prototype = {\n  classification: null,\n  level: null,\n  regularExpression: null,\n  id: null,\n\n  setId: function(aId) {\n    this.id = aId;\n  },\n\n  getId: function() {\n    return this.id;\n  },\n\n  setClassification: function(aclassification) {\n    this.classification = aclassification;\n  },\n\n  getClassification: function() {\n    return this.classification;\n  },\n\n  setLevel: function(aLevel) {\n    this.level = aLevel;\n  },\n\n  getLevel: function() {\n    return this.level;\n  },\n\n  setRegEx: function(aRegEx) {\n    this.regularExpression = aRegEx;\n  },\n\n  getRegEx: function() {\n    return this.regularExpression;\n  },\n\n  equals: function(aOther) {\n    return this.classification == aOther.classification\n      && this.level == aOther.level\n      && this.regularExpression == aOther.regularExpression;\n  },\n\n  /**\n   * Determine if this {GameClassificationLevel} matches an input string.\n   *\n   * @param  {String} aSportLevelInput An input string to match against.\n   *\n   * @return {boolean}                  true, if this object's regular\n   *                                    expression matches the given input\n   *                                    string; false, otherwise.\n   */\n  matches: function(aSportLevelInput) {\n    var regularExpression = new RegExp(this.regularExpression);\n    return regularExpression.test(aSportLevelInput);\n  }\n};\n","import { Client } from 'node-rest-client'\nimport { ArbitratorConfig } from './ArbitratorConfig'\n\nexport var LocationService = function () {\n}\n\nLocationService.prototype = {\n  mCurrentLatitude: 0.0,\n  mCurrentLongitude: 0.0,\n  mGoogleMapsClient: require('@google/maps').createClient({\n    key: ArbitratorConfig.google_api_key\n  }),\n  mDistanceCircle: null,\n\n  /**\n   * A replacement for navigator.geolocation.getCurrentPosition().\n   *\n   * It's still unclear why navigator.geolocation.getCurrentPosition doesn't\n   * work within electron, but it's possible that it has something to do with:\n   * https://github.com/electron/electron/issues/1376\n   */\n  _getCurrentPosition: function(callback) {\n    var client = new Client();\n      client.get('https://maps.googleapis.com/maps/api/browserlocation/json?browser=chromium&sensor=true', function(data) {\n          if (data.location) {\n            var position = {\n                coords : {\n                    latitude : data.location.lat,\n                    longitude : data.location.lng\n                }\n            };\n            callback(position);\n          }\n      });\n  },\n\n  /**\n   * Use the Google Maps API to retrieve Google place predictions for a given\n   * string query.\n   *\n   * @param query [string] The search term for the prediction query\n   * @param callback [function(Array)] The function to call when results are\n   *        available. These results are sent as an array to the callback.\n   */\n  getPredictionsForQuery: function(query, callback) {\n    var self = this;\n    self._getCurrentPosition(function(aPosition) {\n      // Success\n      self.mCurrentLatitude = aPosition.coords.latitude;\n      self.mCurrentLongitude = aPosition.coords.longitude;\n      self.mGoogleMapsClient.placesQueryAutoComplete({\n        input: query,\n        language: 'en',\n        location: [self.mCurrentLatitude, self.mCurrentLongitude],\n        radius: 5000\n      }, function (error, response) {\n        var results = [];\n        var predictions = response.json.predictions;\n        for (var i = 0; i < predictions.length; i++) {\n          var nextPrediction = predictions[i];\n          if (nextPrediction.types) {\n            // We only want establishments and geocode types of places.\n            if (nextPrediction.types.includes('establishment')\n                || nextPrediction.types.includes('geocode')) {\n                results.push(nextPrediction.description);\n            }\n          }\n        }\n\n        callback(results);\n      });\n    });\n  }\n}\n","/**\n * A Place consists of a name, a shorter name (the alias used within Arbiter to\n * identify the site), an address, and a sub-location name (possibly blank). The\n * address may be undefined if no address was specified for this Place.\n */\nexport var Place = function(aShortName, aName, aAddress, aSubLocationName) {\n  this.mShortName = aShortName;\n  this.mName = aName;\n  this.mAddress = aAddress;\n  this.mSubLocationName = aSubLocationName;\n}\n\nPlace.prototype = {\n  getShortName: function() {\n    return this.mShortName;\n  },\n\n  getName: function() {\n    return this.mName;\n  },\n\n  getAddress: function() {\n    return this.mAddress;\n  },\n\n  getSubLocationName: function() {\n    return this.mSubLocationName;\n  },\n\n  hasSubLocation: function() {\n    return this.getSubLocationName() != \"\";\n  }\n}\n","import { Place } from './Place';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport jetpack from 'fs-jetpack';\nimport env from 'env';\nimport { LeagueProfile, GameClassificationLevel } from './LeagueProfile';\n\nconst PREFERENCE_STORE_KEY = Symbol(\"PreferenceStore\");\n\n/**\n * An object connected to local storage for persistent storage of setting\n * data.\n *\n * Preference objects are broken into the following sub-objects:\n *  |-- groupAliases: Contains a set of key-value pairs matching ArbiterSports\n *  |                 group identifiers (key) to human-readable aliases to be\n *  |                 used in Google calendar (value).\n *  |-- time:         Contains three possible key-value pairs to control time\n *  |  |              settings.\n *  |  |-- priorToStart:     How many minutes prior to the start of a game Google\n *  |  |                     calendar events should be set to start at. Allows for\n *  |  |                     preparation time prior to games.\n *  |  |-- gameLength:       How many minutes games should occupy on the schedule\n *  |  |                     (i.e. the duration of calendar events).\n *  |  |-- consecutiveGames: The threshold (in hours) for determining whether two\n *  |                        games are consecutive, assuming they take place at\n *  |                        the same location.\n *  |-- locations:    Contains a set of key-value pairs where each key is an\n *  |                 identifer (from ArbiterSports) for a location, and each\n *  |                 value is the serialization of a {Place} object\n *  |                 representing that location in Arbitrator.\n *  |-- user:           Contains three possible key-value pairs to control\n *  |  |                user-specific settings:\n *  |  |-- id:           The value of this preference is the unique identifier of\n *  |  |                 the user, as obtained from Google.\n *  |  |-- googleAuth:   The value of this preference is an object with key-value\n *  |  |                 pairs that hold the authentication information for the\n *  |  |                 Google OAuth2 client.\n *  |  |-- lastCalendar: The value of this preference is the identifier of the\n *  |                    last calendar the user selected.\n *  |-- leagueProfiles: Contains an array of {LeagueProfile} objects.\n */\nvar PreferenceStore = function() {\n  if (env.name == 'test') {\n    this.shouldStore = false;\n  }\n\n  this._retrievePreferences();\n}\n\nexport var UserPreferenceKeys = {\n    /**\n     * Key for accessing Google user id data within the PreferenceStore.\n     */\n    USER_ID: 'userId',\n\n    /**\n     * Key for accessing Google OAuth2 data within the PreferenceStore.\n     */\n    GOOGLE_AUTH_DATA: 'googleAuth',\n\n    /**\n     * Key for accessing the last calendar id used from within the\n     * PreferenceStore.\n     */\n    LAST_CALENDAR_ID: 'lastCalendar'\n};\n\nexport var TimePreferenceKeys = {\n  /**\n   * Flag for indicating the time type is prior to the game start.\n   */\n  PRIOR_TO_START: 'priorToStart',\n\n  /**\n   * Flag for indicating the time type is after the game start until the game\n   * ends (i.e. the length of the game).\n   */\n  LENGTH_OF_GAME: 'gameLength',\n\n  /**\n   * Flag for indicating how long (in hours) between games should be considered\n   * \"consecutive\" games. Any game at the same location within this number of\n   * hours of a previous game on the same day will be considered \"consecutive\".\n   */\n  CONSECUTIVE_GAME_THRESHOLD: 'consecutiveGames'\n};\n\nPreferenceStore.prototype = {\n  shouldStore: true,\n\n  /**\n   * Add an alias for a group ID so that it can be reported as a human-readable\n   * name.\n   *\n   * @param aGroupId The id of the group to alias\n   * @param aGroupAlias The alias to replace the group id with.\n   */\n  addGroupAlias: function(aGroupId, aGroupAlias) {\n    if (!this.groupAliases) {\n      this.groupAliases = {};\n    }\n\n    this._verifyExtensibility(\"groupAliases\");\n\n    this.groupAliases[aGroupId] = aGroupAlias;\n    this._putPreferences();\n  },\n\n  /**\n   * Add a new {LeagueProfile} to the preference store.\n   *\n   * @param {LeagueProfile} aLeagueProfile The profile to add to the\n   *        preference store.\n   */\n  addLeagueProfile: function(aLeagueProfile) {\n    if (!this.leagueProfiles) {\n      this.leagueProfiles = [];\n    }\n\n    this.leagueProfiles.push(aLeagueProfile);\n    this._putPreferences();\n  },\n\n  /**\n   * Set an existing {LeagueProfile} to a new value.\n   *\n   * This will search, by profileId, for an existing {LeagueProfile} within\n   * the preference store. If one is found, it will be removed and replaced with\n   * the given parameter. If one is not found, then the given parameter will be\n   * added to the preference store as if addLeagueProfile() was called.\n   *\n   * @param {LeagueProfile} aLeagueProfile The new profile to place into the\n   *        preference store.\n   */\n  setLeagueProfile: function(aLeagueProfile) {\n    for (var idx in this.leagueProfiles) {\n      var nextProfile = this.leagueProfiles[idx];\n      if (nextProfile.getProfileId() == aLeagueProfile.getProfileId()) {\n        this.leagueProfiles.splice(idx, 1);\n        break;\n      }\n    }\n\n    this.addLeagueProfile(aLeagueProfile);\n  },\n\n  /**\n   * Add a {GameClassificationLevelSetting} to a {LeagueProfile} and store it in the\n   * preference store.\n   *\n   * @param {string} aProfileName The profileId of the {LeagueProfile} to add\n   *                              the new setting to.\n   * @param {string} aClassification         The age descriptor of the new\n   *                              {GameClassificationLevelSetting}.\n   * @param {string} aLevel       The level descriptor of the new\n   *                              {GameClassificationLevelSetting}.\n   * @param {string} aRegex       The regular expression defining the new\n   *                              {GameClassificationLevelSetting}.\n   */\n  addGameClassificationLevelSetting: function(aProfileName, aClassification, aLevel, aRegex) {\n    var self = this;\n\n    var setting = new GameClassificationLevel(aClassification, aLevel, aRegex);\n    var leagueProfile = self.getLeagueProfile(aProfileName);\n    if (!leagueProfile) {\n      leagueProfile = new LeagueProfile(aProfileName);\n    }\n\n    leagueProfile.addGameClassificationLevel(setting);\n    self.setLeagueProfile(leagueProfile);\n  },\n\n  /**\n   * Add a time preference to the preference store.\n   *\n   * @param aType The type to add. Must be one of TimePreferenceKeys available options.\n   * @param aTimePeriod The time value to add to the preference store. If not\n   *        >= 0, then will be set to 0.\n   */\n  addTimePreference: function(aType, aTimePeriod) {\n    if (!this.time) {\n      this.time = {};\n    }\n\n    if (aTimePeriod < 0) {\n      console.log(\"Unable to set a time preference value < 0. Resetting time to 0.\");\n      aTimePeriod = 0;\n    }\n\n    var priorStart = this.time[TimePreferenceKeys.PRIOR_TO_START];\n    var gameLength = this.time[TimePreferenceKeys.LENGTH_OF_GAME];\n    var consecThreshold = this.time[TimePreferenceKeys.CONSECUTIVE_GAME_THRESHOLD];\n\n    switch(aType) {\n      case TimePreferenceKeys.PRIOR_TO_START:\n        priorStart = aTimePeriod;\n        break;\n\n      case TimePreferenceKeys.LENGTH_OF_GAME:\n        gameLength = aTimePeriod;\n        break;\n\n      case TimePreferenceKeys.CONSECUTIVE_GAME_THRESHOLD:\n        consecThreshold = aTimePeriod;\n        break;\n\n      default:\n        throw \"Unable to determine type for '\" + aType + \"'\";\n    }\n\n    this.time = {\n      [TimePreferenceKeys.PRIOR_TO_START]: priorStart,\n      [TimePreferenceKeys.LENGTH_OF_GAME]: gameLength,\n      [TimePreferenceKeys.CONSECUTIVE_GAME_THRESHOLD]: consecThreshold\n    };\n\n    this._putPreferences();\n  },\n\n  addLocationPreference: function(aPlace) {\n    if (!this.locations) {\n      this.locations = {};\n    }\n\n    this._verifyExtensibility(\"locations\");\n\n    this.locations[aPlace.getShortName()] = aPlace;\n\n    this._putPreferences();\n  },\n\n  /**\n   * Retrieve the value of a single time preference.\n   *\n   * @param aTimePreferenceKeys The time of time preference to retrieve. Must be one of the\n   *        types specified in TimePreferenceKeys.\n   * @param aDefault The default time (in minutes) to specify if one has not been\n   *        added to the preference store.\n   *\n   * @return A numeric value indicating the number of minutes specified for the\n   *         given time preference.\n   */\n  getTimePreference: function(aTimePreferenceKeys, aDefault) {\n    if (this.time && this.time[aTimePreferenceKeys]) {\n      return parseInt(this.time[aTimePreferenceKeys], 10);\n    }\n\n    return aDefault;\n  },\n\n  /**\n   * Retrieve all {LeagueProfile}s in the {PreferenceStore}.\n   *\n   * @return {Array} An array of {LeagueProfile} objects corresponding to all\n   *                 the {LeagueProfile}s that exist in this {PreferenceStore}.\n   */\n  getAllLeagueProfiles: function() {\n    if (!this.leagueProfiles) {\n      this.leagueProfiles = [];\n    }\n\n    return this.leagueProfiles;\n  },\n\n  /**\n   * Retrieve a specific {LeagueProfile} by its profile id.\n   *\n   * @param  {String} aProfileId A string identifier to search for.\n   *\n   * @return {LeagueProfile}     The {LeagueProfile} with id == aProfileId, if\n   *                             it exists; null, otherwise.\n   */\n  getLeagueProfile: function(aProfileId) {\n    var leagueProfiles = this.getAllLeagueProfiles();\n    for (var idx in leagueProfiles) {\n      let nextProfile = leagueProfiles[idx];\n      if (nextProfile.getProfileId() == aProfileId) {\n        return nextProfile;\n      }\n    }\n\n    return null;\n  },\n\n  getLocationPreference: function(aLocationKey) {\n      if (this.locations && this.locations[aLocationKey]) {\n        var genericLoc = this.locations[aLocationKey];\n        return new Place(genericLoc.mShortName, genericLoc.mName,\n                        genericLoc.mAddress, genericLoc.mSubLocationName);\n      }\n\n      return aLocationKey;\n  },\n\n  /**\n   * Retrieve all preferences related to time currently in the preference store.\n   *\n   * @return An object with members corresponding to time preferences as defined\n   *         in TimePreferenceKeys, if they exist in the local storage; an empty object,\n   *         otherwise.\n   */\n  getAllTimePreferences: function() {\n    if (this.time) {\n      return Object.freeze(this.time);\n    }\n\n    return new Object();\n  },\n\n  getAllLocationPreferences: function() {\n    if (this.locations) {\n      return Object.freeze(this.locations);\n    }\n\n    return new Object();\n  },\n\n  /**\n   * Retrieve all preferences related to group aliases currently in the\n   * preference store.\n   *\n   * @return An object with members corresponding to group alias preferences if\n   *         any exist in the local storage; an empty object, otherwise.\n   */\n  getAllGroupAliases: function() {\n      if (this.groupAliases) {\n        return Object.freeze(this.groupAliases);\n      }\n\n      return new Object();\n  },\n\n  /**\n   * Retrieve all of the group alias names in an array sorted in alphabetical\n   * order.\n   *\n   * @return {array} An array of {string} values, where each entry is an alias\n   *         for a group entered into the group alias preferences (i.e. the\n   *         resolved value, not the original value). This is array is returned\n   *         sorted in alphabetical order.\n   */\n  getAllGroupAliasNamesAsSortedArray: function() {\n    var sortedArray = [];\n    var groupAliases = this.getAllGroupAliases();\n    for (var prop in groupAliases) {\n      if (groupAliases.hasOwnProperty(prop)) {\n        sortedArray.push(groupAliases[prop]);\n      }\n    }\n\n    return sortedArray.sort();\n  },\n\n  /**\n   * Retrieve an alias for a group, based on an ID submitted.\n   */\n  getAliasForGroupId: function(aGroupId) {\n    if (this.groupAliases) {\n      var actualName = this.groupAliases[aGroupId];\n      if (actualName) {\n        return actualName;\n      }\n    }\n\n    // Once it's been seen, we should add it to the preference store.\n    this.addGroupAlias(aGroupId, aGroupId);\n\n    return aGroupId;\n  },\n\n  /**\n   * Determine if there are aliased groups in local storage.\n   *\n   * @return true, if there is at least one group id with an alias;\n   *         false, otherwise\n   */\n  hasAliasedGroups: function() {\n    if (this.groupAliases) {\n      for (var prop in this.groupAliases) {\n        if (this.groupAliases.hasOwnProperty(prop)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Determine if there are time preferences saved in local storage.\n   *\n   * @return true, if there is at least one time preference saved to local storage;\n   *         false, otherwise\n   */\n  hasTimePreferences: function() {\n    if (this.time) {\n      for (var prop in this.time) {\n        if (this.time.hasOwnProperty(prop)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  hasLocationPreference: function(aPreferenceKey) {\n    if (this.locations) {\n      if (this.locations.hasOwnProperty(aPreferenceKey)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Remove the instance of a single time preference from the preference store.\n   *\n   * @param aTimePreferenceKeys The type of time preference to remove. Must be one of the\n   *        values specified in TimePreferenceKeys.\n   */\n  removeTimePreference: function(aTimePreferenceKeys) {\n    if (this.time) {\n      delete this.time[aTimePreferenceKeys];\n    }\n\n    this._putPreferences();\n  },\n\n  removeLocationPreference: function(aLocationKey) {\n    this._verifyExtensibility(\"locations\");\n\n    if (this.locations) {\n      delete this.locations[aLocationKey];\n    }\n\n    this._putPreferences();\n  },\n\n  /**\n   * Remove a previously created alias for a group ID.\n   *\n   * @param The group id for which the previously-created alias should be\n   *         removed.\n   */\n  removeGroupAlias: function(aGroupId) {\n    this._verifyExtensibility(\"groupAliases\");\n\n    if (this.groupAliases) {\n      delete this.groupAliases[aGroupId];\n    }\n\n    this._putPreferences();\n  },\n\n  setLastCalendarId: function(aLastCalendarId) {\n    if (!this.user) {\n      this.user = {};\n    }\n\n    this.user[UserPreferenceKeys.LAST_CALENDAR_ID] = aLastCalendarId;\n    this._putPreferences();\n  },\n\n  getLastCalendarId: function() {\n    if (!this.user) {\n      return null;\n    }\n\n    return this.user[UserPreferenceKeys.LAST_CALENDAR_ID];\n  },\n\n  setUserId: function(aUserId) {\n    if (!this.user) {\n      this.user = {};\n    }\n\n    this.user[UserPreferenceKeys.USER_ID] = aUserId;\n\n    this._putPreferences();\n  },\n\n  removeUserId: function() {\n    if (!this.user) {\n      return null;\n    }\n\n    delete this.user[UserPreferenceKeys.USER_ID]\n    this._putPreferences();\n  },\n\n  getUserId: function() {\n    return this.user[UserPreferenceKeys.USER_ID];\n  },\n\n  /**\n   * Remove all previously created group aliases from the preference store.\n   */\n  removeAllGroupAliases: function() {\n    this.groupAliases = new Object();\n    this._putPreferences();\n  },\n\n  /**\n   * Adjust an existing {GameClassificationLevel} within a {LeagueProfile} to have new\n   * values for age, level, and regular expression.\n   *\n   * @param {string} aGroupName The string identifier of the profile in which\n   *        the {GameClassificationLevel} exists.\n   * @param {string} aSettingId The unique identifier for the {GameClassificationLevel}\n   *        within its respective {LeagueProfile}.\n   * @param {string} aNewClassification The value to set for the Classification field of the setting.\n   * @param {string} aNewLevel The value to set for the Level field of the\n   *        setting.\n   * @param {string} aNewRegEx The value to set for the Regular Expression field\n   *        of the setting.\n   */\n  adjustGameClassificationLevel: function(aGroupName, aSettingId, aNewClassification,\n                               aNewLevel, aNewRegEx) {\n    var profile = this.getLeagueProfile(aGroupName);\n    var setting = profile.getGameClassificationLevelById(aSettingId);\n    setting.setClassification(aNewClassification);\n    setting.setLevel(aNewLevel);\n    setting.setRegEx(aNewRegEx);\n    this._putPreferences();\n  },\n\n  /**\n   * Remove an existing {GameClassificationLevel} from a {LeagueProfile}.\n   *\n   * @param {string} aGroupName The string identifier of the {LeagueProfile}\n   *        under which the {GameClassificationLevel} to remove resides.\n   * @param {string} aSettingId The string identifier of the {GameClassificationLevel}\n   *        within its parent {LeagueProfile}.\n   */\n  removeGameClassificationLevelFromProfile: function(aGroupName, aSettingId) {\n    var self = this;\n    self.getLeagueProfile(aGroupName).removeGameClassificationLevelById(aSettingId);\n    self._putPreferences();\n  },\n\n  setAuthTokens: function(aAuthTokens) {\n    if (!this.user) {\n      this.user = {};\n    }\n\n    this.user[UserPreferenceKeys.GOOGLE_AUTH_DATA] = aAuthTokens;\n    this._putPreferences();\n  },\n\n  getAuthTokens: function() {\n    if (!this.user) {\n      return null;\n    }\n\n    return this.user[UserPreferenceKeys.GOOGLE_AUTH_DATA];\n  },\n\n  /**\n   * Export this {PreferenceStore} to a string. This is useful for debugging the\n   * storage methods.\n   *\n   * @return {string} The JSON of this object, in string form.\n   */\n  toString: function() {\n    return JSON.stringify(this);\n  },\n\n  /**\n   * Store preferences to a configuration file in the user's home directory so\n   * they can be read back in at a later date.\n   */\n  _putPreferences: function() {\n    if (this.shouldStore) {\n      var storedPrefs = jetpack.cwd(this._getUserHome())\n                               .dir(\".arbitrator\")\n                               .write(\"userConfig.json\", this);\n     }\n  },\n\n  /**\n   * Retrieve preferences from local storage and populate this object with the\n   * data from the store.\n   */\n  _retrievePreferences: function() {\n    var storedPrefs = jetpack.cwd(this._getUserHome())\n                             .read(\".arbitrator/userConfig.json\", 'json');\n    if (this.shouldStore && storedPrefs) {\n      this.groupAliases = storedPrefs.groupAliases;\n      this.time = storedPrefs.time;\n      this.locations = storedPrefs.locations;\n      this.user = storedPrefs.user;\n      this.leagueProfiles =\n        this._deserializeGameProfiles(storedPrefs.leagueProfiles);\n    }\n  },\n\n  // TODO: We should separate this into a module that allows for more general\n  //       deserialization.\n  _deserializeGameProfiles: function(aBaseObject) {\n    var profiles = [];\n    for (var idx in aBaseObject) {\n      profiles.push(this._deserializeSingleGameProfile(aBaseObject[idx]));\n    }\n\n    return profiles;\n  },\n\n  _deserializeSingleGameProfile: function(aBaseObject) {\n    var profile = new LeagueProfile(aBaseObject.profileId);\n    for (var idx in aBaseObject.classificationLevels) {\n      var nextGameClassificationLevel = aBaseObject.classificationLevels[idx];\n      profile.addGameClassificationLevel(new GameClassificationLevel(nextGameClassificationLevel.classification,\n                                               nextGameClassificationLevel.level,\n                                               nextGameClassificationLevel.regularExpression));\n    }\n    return profile;\n  },\n\n  _getUserHome: function() {\n    return process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];\n  },\n\n  _verifyExtensibility: function(aProperty) {\n    if (!Object.isExtensible(this[aProperty])) {\n      // Make a copy of the object, because somewhere along the line, it became\n      // non-extensible. :(\n      var newObj = {};\n      for (var x in this[aProperty]) {\n        newObj[x] = this[aProperty][x];\n      }\n\n      this[aProperty] = newObj;\n    }\n  },\n\n  /**\n   * Set all game age profiles within this {PreferenceStore}.\n   *\n   * This is mostly used for testing convenience.\n   *\n   * @param {Array} gameProfiles An array of {LeagueProfile}s.\n   */\n  _setLeagueProfiles(gameProfiles) {\n    this.leagueProfiles = this._deserializeGameProfiles(gameProfiles);\n  },\n\n  /**\n   * Clear this {PreferenceStore} of {LeagueProfile} objects.\n   */\n  _clearLeagueProfiles() {\n    this.leagueProfiles = [];\n  }\n};\n\nexport var PreferenceSingleton = {};\n\nObject.defineProperty(PreferenceSingleton, \"instance\", {\n  get: function() {\n    if (!global[PREFERENCE_STORE_KEY]) {\n      global[PREFERENCE_STORE_KEY] = new PreferenceStore();\n    }\n\n    return global[PREFERENCE_STORE_KEY];\n  }\n});\n\nObject.freeze(PreferenceSingleton);\n","import crypto from 'crypto';\nimport { DeviceInfoSingleton } from './DeviceInfo';\n\nexport var QuickCrypto = function() {\n  var self = this;\n  var deviceInfo = DeviceInfoSingleton.instance;\n  self.mMachineKeyPromise = deviceInfo.getEncryptedDeviceKey();\n}\n\nQuickCrypto.prototype = {\n  // This is a Promise to a machine key, not an actual one.\n  mMachineKeyPromise: null,\n\n  encrypt: function(aData) {\n    return new Promise((resolve, reject) => {\n      var self = this;\n      self.mMachineKeyPromise.then((machineKey) => {\n        const cipher = crypto.createCipher('aes-256-ofb', machineKey);\n\n        var encrypted = '';\n        cipher.on('readable', () => {\n          var data = cipher.read();\n          if (data) {\n            encrypted += data.toString('hex');\n          }\n        });\n\n        cipher.on('end', () => {\n          resolve(encrypted);\n        });\n\n        cipher.write(aData);\n        cipher.end();\n      })\n      .catch((error) => {\n        reject(error);\n      });\n    });\n  },\n\n  decrypt: function(aEncryptedString) {\n    var self = this;\n    return new Promise((resolve, reject) => {\n      self.mMachineKeyPromise.then((machineKey) => {\n        const decipher = crypto.createDecipher('aes-256-ofb', machineKey);\n\n        var decrypted = '';\n        decipher.on('readable', () => {\n          var data = decipher.read();\n          if (data) {\n            decrypted += data.toString('utf8');\n          }\n        });\n\n        decipher.on('end', () => {\n          resolve(decrypted);\n        });\n\n        decipher.write(aEncryptedString, 'hex');\n        decipher.end();\n      });\n    });\n  }\n};\n","export var StringUtils = {\n  capitalize: function(aString) {\n    // Split into words and capitalize each word, then re-join the strings.\n    var wordArray = aString.split(/\\s/);\n    var extractedWords = new Array();\n    for (var i in wordArray) {\n      var value = wordArray[i];\n      if (value.length == 0) {\n        continue;\n      }\n      var newWord = value[0].toUpperCase() + value.substr(1);\n      extractedWords.push(newWord);\n    }\n\n    return extractedWords.join(\" \");\n  }\n};\n","import jetpack from 'fs-jetpack'; // module loaded from npm\n\nexport var Strings = jetpack.cwd(__dirname).read('strings.json', 'json');\n","import jQuery from 'jquery'\nimport $ from 'jquery'\nimport { Place } from './Place'\nimport { ArbitratorGoogleClient } from './ArbitratorGoogleClient'\nimport { ArbitratorConfig } from './ArbitratorConfig'\nimport { StringUtils } from './StringUtils'\nimport { PreferenceSingleton, TimePreferenceKeys } from './PreferenceStore'\nimport { Arbitrator } from './Arbitrator'\nimport { Strings } from './Strings'\nimport util from 'util'\nimport { LocationService } from './LocationService'\nimport { QuickCrypto } from './QuickCrypto'\nimport Lockr from 'lockr';\n\nexport var UIManager = function() {\n}\n\nUIManager.prototype = {\n  mGoogleClient: null,\n  mBackStack: new Array(),\n  mVersion: '0.0.0',\n  mLocationService: new LocationService(),\n\n  /**\n   * Perform functionality when the user clicks the 'Submit' button to indicate\n   * they wish to invoke arbitrator's functionality.\n   */\n  onArbitrate: function() {\n    var scheduleText = $('#schedule').val();\n    var arb = new Arbitrator(scheduleText);\n    var calSelectionElement = document.getElementById('calendarList');\n    var selectedId = calSelectionElement[calSelectionElement.selectedIndex].id;\n    arb.adjustGamesOrSubmitToCalendar(selectedId);\n  },\n\n  setVersion: function(aVersion) {\n    this.mVersion = aVersion;\n  },\n\n  getVersion: function() {\n    return this.mVersion\n  },\n\n  setUIListeners: function() {\n    this._setPreferenceOnClickHandlers();\n    this._setHeaderScrollListener();\n    this._setNavDrawerOnClickHandlers();\n    this._setArbitrateOnClickHandler();\n    this._setLogoutOnClickHandler();\n    this._setDismissSnackBarOnClickHandler();\n  },\n\n  /**\n   * Refresh the preference UI from local storage and populate the UI\n   * accordingly.\n   *\n   * XXX_jwir3: It would be nice if we could somehow specify which refresh\n   *            method should be performed, so we don't refresh all preferences\n   *            after every screen load.\n   */\n  refreshPreferences: function() {\n    var prefStore = PreferenceSingleton.instance;\n\n    this._hidePreferencesBasedOnFeatureFlags();\n\n    this.refreshTimePreferences();\n    this.refreshAliasPreferences();\n    this.refreshLocationPreferences();\n    this.refreshProfilePreferences();\n\n    this._setPreferenceOnClickHandlers();\n  },\n\n  /**\n   * Refresh the data for the LeagueProfile view.\n   */\n  refreshProfilePreferences: function() {\n    // We need all of the group data to populate the profile names.\n    var prefStore = PreferenceSingleton.instance;\n    var aliases = prefStore.getAllGroupAliasNamesAsSortedArray();\n\n    for (var idx in aliases) {\n      var name = aliases[idx];\n      this._addLeagueProfileSubMenu(name);\n    }\n  },\n\n  /**\n   * Refresh the {GameClassificationLevel} listing view.\n   *\n   * @param  {String} aGroupName The identifier of the {LeagueProfile} for which\n   *                             {GameClassificationLevel}s are being shown.\n   */\n  refreshGameClassificationLevelPreferences: function(aGroupName) {\n    var self = this;\n    var prefStore = PreferenceSingleton.instance;\n\n    // Hook up the UI for adding a new game age preference.\n    $('#addNewGameClassificationLevel').off();\n    $('#addNewGameClassificationLevel').click(function() {\n      self._createNewGameClassificationLevelSetting();\n    });\n\n    // Remove all children first.\n    $('#leagueProfileContent').children().remove();\n\n    // Load the existing preferences.\n    self.loadPartialContent('partials/game-classification-preference.partial.html')\n      .then((data) => {\n        var prefStore = PreferenceSingleton.instance;\n        var gameClassificationSettings = prefStore.getLeagueProfile(aGroupName);\n        if (gameClassificationSettings) {\n          var levels = gameClassificationSettings.getLevels();\n          for (var gameClassificationIdx in levels) {\n            var gameClassificationPref = levels[gameClassificationIdx];\n            var settingUI = $(data);\n            var dataSettingId = settingUI.data('settingId', gameClassificationPref.getId());\n            var inputClassification = settingUI.find('#gameClassificationInputClassification');\n            var inputLevel = settingUI.find('#gameClassificationInputLevel');\n            var inputRegex = settingUI.find('#gameClassificationInputRegex');\n            var removeButton = settingUI.find('#removeButton');\n            var modifyButton = settingUI.find('#modifyButton');\n\n            inputClassification.val(gameClassificationPref.getClassification());\n            inputLevel.val(gameClassificationPref.getLevel());\n            inputRegex.val(gameClassificationPref.getRegEx());\n\n            inputClassification.attr('id', 'gameClassificationInputClassification-' + gameClassificationPref.getId());\n            inputLevel.attr('id', 'gameClassificationInputLevel-' + gameClassificationPref.getId());\n            inputRegex.attr('id', 'gameClassificationInputRegex-' + gameClassificationPref.getId());\n\n            removeButton.attr('id', 'removeButton-' + gameClassificationPref.getId());\n            removeButton.click(function() {\n              var parentElement = $(this).parent();\n              var id = parentElement.data('settingId');\n              prefStore.removeGameClassificationLevelFromProfile(aGroupName, id);\n              self.refreshGameClassificationLevelPreferences(aGroupName);\n            });\n\n            modifyButton.attr('id', 'modifyButton-' + gameClassificationPref.getId());\n            modifyButton.click(function() {\n              var parentElement = $(this).parent();\n              var id = parentElement.data('settingId');\n              var inputClassificationWithId = $('#gameClassificationInputClassification-' + id);\n              var inputLevelWithId = $('#gameClassificationInputLevel-' + id);\n              var inputRegexWithId = $('#gameClassificationInputRegex-' + id);\n\n              prefStore.adjustGameClassificationLevel(aGroupName, id,\n                                           inputClassificationWithId.val(),\n                                           inputLevelWithId.val(),\n                                           inputRegexWithId.val());\n\n              self.showSnackbar(util.format(Strings.game_age_preference_updated,\n                                            inputClassificationWithId.val(),\n                                            inputLevelWithId.val()));\n              self.refreshGameClassificationLevelPreferences(aGroupName);\n            });\n            $('#leagueProfileContent').append(settingUI);\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(\"Unable to load game age profile preference template\");\n      });\n  },\n\n  /**\n   * Refresh the preference UI from local storage for all time preferences.\n   */\n  refreshTimePreferences: function() {\n    var prefStore = PreferenceSingleton.instance;\n    var timePrefs = prefStore.getAllTimePreferences();\n    for (var key in timePrefs) {\n      if (timePrefs.hasOwnProperty(key)) {\n        $('#timePref-' + key).val(timePrefs[key]);\n      }\n    }\n  },\n\n  /**\n   * Refresh the preference UI from local storage for all location preferences.\n   */\n  refreshLocationPreferences: function() {\n    var prefStore = PreferenceSingleton.instance;\n    var locPrefs = prefStore.getAllLocationPreferences();\n    for (var key in locPrefs) {\n      if (locPrefs.hasOwnProperty(key)) {\n        this.addLocationPreference(prefStore.getLocationPreference(key));\n      }\n    }\n  },\n\n  /**\n   * Refresh the preference UI from local storage for all group/alias\n   * preferences.\n   */\n  refreshAliasPreferences: function() {\n    $('#aliasInputs').html('');\n    var prefStore = PreferenceSingleton.instance;\n    var aliasedGroups = prefStore.getAllGroupAliases();\n    for (var prop in aliasedGroups) {\n      if (aliasedGroups.hasOwnProperty(prop)) {\n        var groupAlias = aliasedGroups[prop];\n\n        this.addAliasUIFor(prop, groupAlias);\n      }\n    }\n  },\n\n  /**\n   * Set a time preference from the UI an propagate this preference to the\n   * preference store.\n   *\n   * @param aTimePrefName The name of the time preference to set from the UI.\n   */\n  setTimePreferenceFromUI: function(aTimePrefName) {\n    var timePrefVal = $('#timePref-' + aTimePrefName).val();\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.addTimePreference(aTimePrefName, timePrefVal);\n  },\n\n  setArbiterAuthenticationFromUI: function() {\n    var arbiterUsername = $('#arbiterUsername').val();\n    var arbiterPassword = $('#arbiterPassword').val();\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.setArbiterAuthentication(arbiterUsername, arbiterPassword);\n  },\n\n  /**\n   * Add an alias UI element for a given group name and alias.\n   *\n   * @param aGroupName The name of the group (as specified in the input) for which\n   *        an alias was created.\n   * @param aGroupAlias The name of the alias to use for this group.\n   */\n  addAliasUIFor: function(aGroupName, aGroupAlias) {\n    var self = this;\n    self.loadPartialContent('partials/alias-preference.partial.html')\n      .then((data) => {\n        var dataElement = $(data);\n        dataElement.find('.originalName')\n                   .data('actualname', aGroupName)\n                   .attr('value', aGroupName);\n        dataElement.find('.aliasRemoveButton')\n                   .data('actualname', aGroupName);\n\n        // If the group name is the same as the alias name, just assume we don't\n        // have an alias set.\n        if (aGroupAlias != aGroupName) {\n          dataElement.find('.aliasName').attr('value', aGroupAlias);\n        }\n\n        $('#aliasInputs').append(dataElement);\n        self._setAliasPreferenceOnClickHandlers();\n      })\n      .catch((error) => {\n        console.error(\"Unable to load 'partials/alias-preference.partial.html': \"\n                      + error);\n      });\n  },\n\n  showSnackbar: function(aMessage) {\n    $('#snackbar-message').text(aMessage);\n    $('dialog.snackbar').show();\n\n    setTimeout(function() {\n      $('dialog.snackbar').hide();\n    }, 4000);\n  },\n\n  /**\n   * Add an alias to the preference store for a given group name and alias.\n   *\n   * @param aGroupName The name of the group for which the alias should be\n   *        retrieved from the UI and placed in the preference store.\n   * @param aAliasName The name of the alias to use which should be stored in\n   *        the preference store.\n   */\n  addAliasToPrefStore: function(aGroupName, aAliasName) {\n      var prefStore = PreferenceSingleton.instance;\n      prefStore.addGroupAlias(aGroupName, aAliasName);\n      // this.acknowledgePreference(aGroupName);\n      this.showSnackbar(\"Alias '\" + aAliasName + \"' set\");\n  },\n\n  /**\n   * Set a location preference after doing some basic validation of the data.\n   *\n   * Create a new {Place} and submit this to the preference system to be stored.\n   *\n   * @param {string} aLocationPrefKey  The preference system key for the\n   *        preference. If it exists, the preference system will replace the\n   *        key with the newly created {Place}.\n   * @param {string} aLocationPrefName The human-readable name of the place to\n   *        be created.\n   */\n  setLocationPreference: function(aLocationPrefKey, aLocationPrefName) {\n    var self = this;\n    var addressElement = $('#locationAddressPref-' + aLocationPrefKey);\n    var address = addressElement.val();\n    var subLocationElement = $('#locationSubLocationPref-' + aLocationPrefKey);\n    var subLocationName = subLocationElement.val();\n\n    // If either the address or sublocation name is empty, and the other is a\n    // non-default placeholder, use the placeholder in lieu of the value.\n    if (subLocationName && !addressElement.val()\n        && !self._isLocationAddressPlaceholderDefault(addressElement)) {\n      address = addressElement.attr('placeholder');\n    }\n\n    if (address && !subLocationElement.val()\n        && !self._isLocationSublocationPlaceholderDefault(subLocationElement)) {\n      subLocationName = subLocationElement.attr('placeholder');\n    }\n\n    var prefName = '';\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.addLocationPreference(new Place(aLocationPrefKey, aLocationPrefName, address, subLocationName));\n\n    var addressConfirmed = util.format(Strings.address_for_set,\n                                       aLocationPrefName);\n    this.showSnackbar(addressConfirmed);\n  },\n\n  deleteLocationPreference: function(aLocationKey) {\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.removeLocationPreference(aLocationKey);\n  },\n\n  deleteAliasPreference: function(aGroupName) {\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.removeGroupAlias(aGroupName);\n  },\n\n  addLocationPreference: function(aPlace) {\n    var self = this;\n    $.get('partials/location-preference.partial.html', function(data) {\n      var dataElement = $(data);\n      var addressTextInputId = 'locationAddressPref-' + aPlace.getShortName();\n      var subLocationTextInputId = 'locationSubLocationPref-' + aPlace.getShortName();\n\n      var addressPlaceholderText = util.format(Strings.enter_address_for,\n                                               aPlace.getName());\n      if (aPlace.getAddress()) {\n        addressPlaceholderText = aPlace.getAddress();\n      }\n\n      var subLocationPlaceholderText = '';\n      if (aPlace.hasSubLocation()) {\n        subLocationPlaceholderText = aPlace.getSubLocationName();\n      }\n\n      dataElement.find('label').attr('for', addressTextInputId).text(aPlace.getName());\n      dataElement.find('.locationTextInput')\n                 .attr('id', addressTextInputId)\n                 .attr('placeholder', addressPlaceholderText);\n      dataElement.find('.locationTextInput.small').attr('id', subLocationTextInputId)\n                 .attr('placeholder', subLocationPlaceholderText);\n      dataElement.find('.locationRemoveButton')\n                 .data('locationshortname', aPlace.getShortName());\n      dataElement.find('.locationSetButton')\n                 .data('locationshortname', aPlace.getShortName())\n                 .data('locationname', aPlace.getName());\n\n      $('#locationInputs').append(dataElement);\n      var addressElement = document.getElementById('locationAddressPref-' + aPlace.getShortName())\n\n      var Typeahead = require('typeahead');\n\n      // Since this method is run every time preferences are refreshed, and in\n      // order to generalize the loadContent() method a bit we refresh all\n      // preferences on every content load, this should only be called if there\n      // actually _is_ a location preference input element in the DOM.\n      if (addressElement) {\n        // Enable typeahead input on the address input element.\n        var locService = new LocationService();\n        Typeahead(addressElement, {\n          source: function (query, result) {\n            locService.getPredictionsForQuery(query, result);\n          }\n        });\n\n        self._setLocationPreferenceOnClickHandlers();\n      }\n    });\n  },\n\n  /**\n   * Open the navigation drawer using a transition animation.\n   */\n  openNavDrawer: function() {\n    $('#nav-drawer').css({\n      'transform': 'translate(0px, 0px)'\n    });\n  },\n\n  /**\n   * Close the navigation drawer using a transition animation.\n   */\n  closeNavDrawer: function() {\n    $('#nav-drawer').css({\n      'transform': 'translate(-256px, 0px)'\n    });\n  },\n\n  /**\n   * Load partial content using an AJAX request.\n   *\n   * @param  {string} aPartialContentPath The path to the file that should be\n   *                                      loaded as the partial content.\n   *\n   * @return {Promise} A Promise that can be used to access the partial content\n   *                   view structure (e.g. the partial DOM), once it's loaded.\n   */\n  loadPartialContent: function(aPartialContentPath) {\n    return $.get(aPartialContentPath);\n  },\n\n  /**\n   * Load content into the main content pane.\n   *\n   * This asynchronously loads a file prefixed with an appropriate file id into\n   * the main content pane, adjusts the title and back stack, and calls an\n   * optional onComplete() handler when finished.\n   *\n   * @param aContentFileId The id of the content file to load. This must\n   *        correspond to a file in the partials/ subdirectory called\n   *        <aContentFileId>.partial.html.\n   * @param aTitle The title of the page to load. Will be presented in the app\n   *        bar.\n   * @param aOnComplete (optional) If included, this will be called when the\n   *        load operation has completed.\n   */\n  loadContent: function(aContentFileName, aTitle, aOnComplete) {\n    var self = this;\n\n    // Set the text of the nav drawer header\n    self.closeNavDrawer();\n\n    $('main#content').load('partials/' + aContentFileName + '.partial.html', null,\n                           function() {\n                             self._addToBackStack({\n                               'id': aContentFileName,\n                               'name': aTitle\n                             });\n\n                             if (!self._isBackStackEmpty()) {\n                               self._showBackArrow();\n                             } else {\n                               self._showHamburgerIcon();\n                             }\n\n                             // Add the title to the app bar.\n                             $('#pageTitle').text(aTitle);\n\n                             // Add the version number to the app bar\n                             $('#versionNumber').text('v' + self.getVersion());\n\n                             if (aContentFileName == 'main') {\n                               self.refreshGoogleClient(function(aGoogleClient) {\n                                 self.populateCalendarList(aGoogleClient);\n                                 self.populateUserId(aGoogleClient);\n                                 self._setArbitrateOnClickHandler();\n                               });\n                             }\n\n                             if (aOnComplete) {\n                               aOnComplete();\n                             }\n                           });\n  },\n\n  /**\n   * Refresh the ArbitratorGoogleClient object held internally.\n   *\n   * If necessary, this will create a new ArbitratorGoogleClient object.\n   *\n   * @param aOnComplete A function to execute after the ArbitratorGoogleClient\n   *        is initialized. If the ArbitratorGoogleClient is already set up, it\n   *        will execute immediately; otherwise, it will execute once the\n   *        ArbitratorGoogleClient is completely initialized. This function\n   *        should take a single argument: the ArbitratorGoogleClient instance\n   *        (in the event you want to work with it in the callback).\n   */\n  refreshGoogleClient: function(aOnComplete) {\n    if (this.mGoogleClient == null) {\n      this.mGoogleClient = new ArbitratorGoogleClient();\n    }\n\n    this.mGoogleClient.getClient().then((client) => {\n      aOnComplete(this.mGoogleClient);\n    });\n  },\n\n  /**\n   * Populate the list of calendars in the main user interface.\n   *\n   * @param  {[ArbitratorGoogleClient]} aGoogleClient The client with which the\n   *                                    api calls should be run with.\n   */\n  populateCalendarList: function(aGoogleClient) {\n    var prefStore = PreferenceSingleton.instance;\n    var lastCalendarId = prefStore.getLastCalendarId();\n\n    var calendarSelector = $('#calendarList');\n    var noCalendarSelectedOption = $('<option id=\"noCalendarSelectedOption\">' + Strings.select_calendar + '</option>');\n    calendarSelector.append(noCalendarSelectedOption);\n\n    aGoogleClient.getCalendarList()\n      .then((items) => {\n        var selectEle = $('#calendarList');\n        for (var calendarIdx in items) {\n            var calendarItem = items[calendarIdx];\n            var listItem = $('<option></option>');\n            listItem.attr('id', calendarItem.id);\n            listItem.text(calendarItem.summary);\n            selectEle.append(listItem);\n        }\n\n        // Select last calendar\n        if (lastCalendarId) {\n          var calChildren = calendarSelector.children();\n          calChildren.each(function(childNumber) {\n            var currentChild = $(calChildren[childNumber]);\n            if (currentChild.attr('id') == lastCalendarId) {\n              currentChild.prop('selected', 'selected');\n            }\n          });\n          // calendarSelector.find('option#' + lastCalendarId).prop('selected', 'selected');\n        }\n\n        selectEle.css('display', 'block');\n      });\n\n      // Setup on change event\n      calendarSelector.off();\n      calendarSelector.change(function(event) {\n        prefStore.setLastCalendarId(event.target.selectedOptions[0].id);\n      });\n  },\n\n  /**\n   * Populate the Google+ user id of the user in the preference store.\n   *\n   * @param  {[ArbitratorGoogleClient]} aGoogleClient The client with which the\n   *                                    api calls should be run with.\n   */\n  populateUserId: function(aGoogleClient) {\n    aGoogleClient.getUserId().then((id) => {\n      var prefStore = PreferenceSingleton.instance;\n      prefStore.setUserId(id);\n    });\n  },\n\n  /**\n   * Clear the main text input to the Arbitrator tool.\n   */\n  clearArbitratorInput: () => {\n    $('#schedule').val('');\n  },\n\n  // logout: function() {\n  //   var prefStore = PreferenceSingleton.instance;\n  //   prefStore.removeUserId();\n  //   location.reload();\n  // },\n\n  _hidePreferencesBasedOnFeatureFlags: function() {\n    if (!ArbitratorConfig.hasOwnProperty('feature_arbiter_sports_login')) {\n      console.warn(\"Could not find feature flag feature_arbiter_sports_login. Assuming it's set to false.\");\n    }\n\n    if (ArbitratorConfig.feature_arbiter_sports_login) {\n      $('#feature_arbiter_sports_login').show();\n    } else {\n      $('#feature_arbiter_sports_login').hide();\n    }\n  },\n\n  /**\n   * Set all onClick() handlers for preference UI elements.\n   */\n  _setPreferenceOnClickHandlers: function() {\n    this._setTimePreferenceOnClickHandlers();\n    this._setArbiterConnectionPreferenceOnClickHandlers();\n    this._setAliasPreferenceOnClickHandlers();\n    this._setLocationPreferenceOnClickHandlers();\n  },\n\n  /**\n   * Set whether the \"Setup Connection\" button is visible on the settings page.\n   *\n   * @param isVisible [boolean] If true, the \"Setup Connection\" button will be\n   *        visible, and the refreshing indicator will be hidden; if false, the\n   *        opposite will be true.\n   */\n  _setConnectionButtonVisible(isVisible) {\n    if (isVisible) {\n      $('#setupArbiterConnection').show();\n      $('#connectionIndicator').hide();\n    } else {\n      $('#setupArbiterConnection').hide();\n      $('#connectionIndicator').show();\n    }\n  },\n\n  _setArbiterConnectionPreferenceOnClickHandlers: function() {\n    var self = this;\n    $('#setArbiterAuth').click(function() {\n      self.setArbiterAuthenticationFromUI();\n    });\n\n    $('#setupArbiterConnection').click(() => {\n      self._setConnectionButtonVisible(false);\n      $('#connection-successful').hide();\n      $('#connection-failed').hide();\n\n      const prefStore = PreferenceSingleton.instance;\n      const { BrowserWindow, app } = require('electron').remote;\n      var ipcRenderer = require('electron').ipcRenderer;\n\n      var aspAuth = Lockr.get('ASPXAUTH_ARBITER');\n      ipcRenderer.send('arbiter-request-create-window', aspAuth);\n      ipcRenderer.on('arbiter-window-closed', (event, message) => {\n        self._setConnectionButtonVisible(true);\n      });\n\n      ipcRenderer.on('arbiter-authenticated', (event, aspAuth) => {\n        Lockr.set(\"ASPXAUTH_ARBITER\", aspAuth);\n\n        // This next part closes the window and returns a positive\n        // authentication status.\n        ipcRenderer.send('arbiter-request-destroy-window', true);\n      });\n\n      ipcRenderer.on('arbiter-connection-check-finished', (event, wasSuccessful) => {\n        if (wasSuccessful) {\n          $('#connection-successful').show();\n          $('#connection-failed').hide();\n        } else {\n          $('#connection-successful').hide();\n          $('#connection-failed').show();\n        }\n      });\n\n      // ipcRenderer.on('arbiter-document-received', (event, dom) => {\n      //   console.log(dom);\n      // });\n    });\n  },\n\n  /**\n   * Set the onClick() handlers for time preferences.\n   */\n  _setTimePreferenceOnClickHandlers: function() {\n    var self = this;\n    $('#setPriorToStart').click(function() {\n      var minutes = $('#timePref-priorToStart').val();\n      self.setTimePreferenceFromUI('priorToStart');\n      var priorToStartAcknowledge = util.format(Strings.calendar_events_will_start,\n                                                minutes);\n      self.showSnackbar(priorToStartAcknowledge);\n    });\n\n    $('#setGameLength').click(function() {\n      var length = $('#timePref-gameLength').val();\n      self.setTimePreferenceFromUI('gameLength');\n      var gameLengthAcknowledge = util.format(Strings.calendar_events_length,\n                                              length);\n      self.showSnackbar(gameLengthAcknowledge);\n    });\n\n    $('#setConsecutiveGames').click(function() {\n      var consecutiveThresh = $('#timePref-consecutiveGames').val();\n      self.setTimePreferenceFromUI('consecutiveGames');\n      var consecutiveAcknowledge = util.format(Strings.consecutive_games_acknowledgement,\n                                               consecutiveThresh);\n      self.showSnackbar(consecutiveAcknowledge);\n    });\n  },\n\n  /**\n   * Set the onClick() handlers for alias/group preferences.\n   */\n  _setAliasPreferenceOnClickHandlers: function() {\n    var self = this;\n    var prefStore = PreferenceSingleton.instance;\n\n    $('button.setAlias').each(function() {\n      $(this).off('click');\n      $(this).click(function() {\n        var actualName = $(this).parent().find('.originalName').data('actualname');\n        var aliasName = $(this).parent().find('.aliasName').val();\n        self.addAliasToPrefStore(actualName, aliasName);\n      });\n    });\n\n    $('.aliasRemoveButton').each(function() {\n      $(this).off('click');\n      $(this).click(function() {\n        self.deleteAliasPreference($(this).data('actualname'));\n        $(this).parent().fadeOut(300, function () {\n          $(this).remove();\n        });\n      });\n    });\n\n    $('#aliasAddButton').off('click');\n    $('#aliasAddButton').click(function() {\n      var actualName = $('#aliasAddName').text();\n      var aliasName = $('#aliasAddAlias').text();\n\n      self.addAliasToPrefStore(actualName, aliasName);\n\n      $('#aliasAddName').text('');\n      $('#aliasAddAlias').text('');\n\n      self.refreshAliasPreferences();\n    });\n  },\n\n  _setLocationPreferenceOnClickHandlers: function() {\n    var self = this;\n    $('.locationSetButton').each(function() {\n      $(this).click(function() {\n        var locationShortName = $(this).data('locationshortname');\n        var locationName = $(this).data('locationname');\n\n        self.setLocationPreference(locationShortName, locationName);\n      });\n    });\n\n    $('.locationRemoveButton').each(function() {\n      $(this).click(function() {\n        self.deleteLocationPreference($(this).data('locationshortname'));\n        $(this).parent().fadeOut(300, function () {\n          $(this).remove();\n        });\n      });\n    });\n  },\n\n/**\n * Enable the scroll listener so we can determine whether to show the box\n * shadow beneath the app bar. If the view is scrolled, the app bar will have\n * a shadow underneath it. Otherwise, the app bar will have no shadow.\n */\n  _setHeaderScrollListener: function() {\n    $(window).scroll(function() {\n      if ($(this).scrollTop() == 0) {\n          $('header').css({'box-shadow': 'none'});\n      } else {\n        $('header').css({\n          'box-shadow': '0px 2px 10px rgba(0, 0, 0, 0.2)'\n        });\n      }\n    });\n  },\n\n  /**\n   * Set the onClick() handler for the main \"arbitrate\" button.\n   */\n  _setArbitrateOnClickHandler: function() {\n    var self = this;\n    // First, remote all handlers that were previousl associated with this\n    // button.\n    $('#arbitrate-button').off();\n    $('#arbitrate-button').click(function () {\n      self.onArbitrate();\n    });\n  },\n\n  /**\n   * Set the onClick() handler for the logout link.\n   */\n   _setLogoutOnClickHandler: function() {\n     $('#logoutLink').click(function() {\n       this.logout();\n     });\n   },\n\n   _setDismissSnackBarOnClickHandler: function() {\n     $('#dismissSnackbar').click(function(){\n       $('#snackbar-message').text('');\n       $('.snackbar').hide();\n     });\n   },\n\n  /**\n   * Set the onClick() handler for the navigation drawer button (i.e. the\n   * hamburger icon). Also sets up all the navigation drawer item onClick()\n   * handlers.\n   */\n  _setNavDrawerOnClickHandlers: function() {\n    var self = this;\n\n    $('.nav-drawer-header').click(function() {\n      $('#nav-drawer').css({\n        'transform': 'translate(-256px, 0px)'\n      });\n    });\n\n    $('.nav-drawer-item').each(function() {\n      var rawData = $(this).data('item');\n      var unspacedData = rawData.replace(/\\s/, '-');\n\n      $(this).click(function() {\n        self.loadContent(unspacedData, StringUtils.capitalize(rawData), function() {\n          self.refreshPreferences();\n        });\n      });\n    });\n  },\n\n  /**\n   * Show the back arrow icon in place of the navigation drawer icon and adjust\n   * the onClick() functionality for this icon so that it pops from the back\n   * stack.\n   */\n  _showBackArrow: function() {\n    var self = this;\n\n    $('#hamburger').css({\n      'background': 'no-repeat url(\"images/back.svg\")'\n    });\n\n    self._bindEventHandlerForNavMenu(true);\n  },\n\n  /**\n   * Show the hamburger (navigation drawer indicator) icon and adjust\n   * the onClick() functionality for this icon so that it opens the navigation\n   * drawer.\n   */\n  _showHamburgerIcon: function() {\n    var self = this;\n\n    $('#hamburger').css({\n      'background': 'no-repeat url(\"images/hamburger.svg\")'\n    });\n\n    self._bindEventHandlerForNavMenu(false);\n  },\n\n  /**\n   * Clear current event handlers for the nav menu button in the upper right of\n   * the app bar and re-add the appropriate onClick() handler.\n   */\n  _bindEventHandlerForNavMenu: function(aIsBack) {\n    var self = this;\n    $('#hamburger').unbind('click');\n\n    if (aIsBack) {\n      $('#hamburger').click(function() {\n        self._popBackStack();\n      });\n    } else {\n      $('#hamburger').click(function() {\n        self.openNavDrawer();\n      });\n    }\n  },\n\n  /**\n   * Add a new back stack entry to the back stack.\n   *\n   * A back stack entry consists of an object of the form:\n   * {\n   *   'id': <string>,\n   *   'name': <string\n   * }\n   * where 'id' is a string indicating the id of the content to show, which must\n   * be unique and be the prefix of one of the .partial.html files in the partials/\n   * subdirectory, and 'name' is the human-readable title of the content.\n   *\n   * @param aBackStackEntry The back stack entry to add to the back stack.\n   */\n  _addToBackStack: function(aBackStackEntry) {\n    this.mBackStack.push(aBackStackEntry);\n  },\n\n  /**\n   * Remove the last back stack entry from the back stack and return it.\n   *\n   * A back stack entry consists of an object of the form:\n   * {\n   *   'id': <string>,\n   *   'name': <string\n   * }\n   * where 'id' is a string indicating the id of the content to show, which must\n   * be unique and be the prefix of one of the .partial.html files in the partials/\n   * subdirectory, and 'name' is the human-readable title of the content.\n   *\n   * @return The back stack entry in the back stack that was last added.\n   */\n  _popBackStack: function() {\n    var self = this;\n\n    // Remove the current entry from the back stack first\n    this.mBackStack.pop();\n\n    var lastEntry = this.mBackStack.pop();\n\n    this.loadContent(lastEntry.id, lastEntry.name, function() {\n      self.refreshPreferences();\n    });\n  },\n\n  /**\n   * Determine if the back stack is empty.\n   *\n   * The back stack is empty if it contains a single content node - that of the\n   * 'main' or root content.\n   *\n   * @return True, if the back stack contains 1 item; false, otherwise.\n   */\n  _isBackStackEmpty: function() {\n    return this._getBackStackSize() == 1;\n  },\n\n  /**\n   * @return The number of items in the back stack.\n   */\n  _getBackStackSize: function() {\n    return this.mBackStack.length;\n  },\n\n  _isLocationAddressPlaceholderDefault: function(aJQueryObject) {\n    var defaultPlaceholderPrefix = Strings.enter_address_for.slice(0, 17);\n    return aJQueryObject.attr('placeholder').startsWith(defaultPlaceholderPrefix);\n  },\n\n  _isLocationSublocationPlaceholderDefault: function(aJQueryObject) {\n    return aJQueryObject.attr('placeholder') == '';\n  },\n\n  /**\n   * Create a new {GameClassificationLevel} from inputs entered by the user\n   * within the current view.\n   */\n  _createNewGameClassificationLevelSetting: function() {\n    var self = this;\n    var prefStore = PreferenceSingleton.instance;\n\n    // Grab the values\n    var regex = $('#gameClassificationInputRegex').val();\n    var age = $('#gameClassificationInputClassification').val();\n    var level = $('#gameClassificationInputLevel').val();\n\n    // Push to the preference store\n    var profileName = $('#leagueProfileContent').data('profilename');\n    prefStore.addGameClassificationLevelSetting(profileName, age, level, regex);\n\n    // Refresh the prefs.\n    self.refreshGameClassificationLevelPreferences(profileName);\n\n    $('#gameClassificationInputClassification').val('');\n    $('#gameClassificationInputLevel').val('');\n    $('#gameClassificationInputRegex').val('');\n  },\n\n  /**\n   * Add a new sub-menu option to the {LeagueProfile} listing corresponding to\n   * a given group alias.\n   *\n   * Note that this also sets up the click handler for the given sub-menu so\n   * that it transitions it to the league profile detail view.\n   *\n   * @param {String} aName The name of a {LeagueProfile} to display in the\n   *                       listing.\n   */\n  _addLeagueProfileSubMenu: function(aName) {\n    var self = this;\n    self.loadPartialContent('partials/league-profile-preference.partial.html')\n      .then((partialContent) => {\n        var partialContentDOM = $(partialContent);\n        partialContentDOM.find('.league-profile-label').append(aName);\n        partialContentDOM.click(function() {\n          self.loadContent('league-profile', aName + \" Game Classification Profile\", function() {\n            $('#leagueProfileContent').data('profilename', aName);\n            self.refreshGameClassificationLevelPreferences(aName);\n          });\n        });\n        $('#levelsContent').append(partialContentDOM);\n      })\n      .catch((error) => {\n        console.error(\"Unable to load 'partials/league-profile-preference.partial.html': \"\n                      + error);\n      });\n  }\n};\n","// This helper remembers the size and position of your windows (and restores\n// them in that place after app relaunch).\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from 'electron';\nimport jetpack from 'fs-jetpack';\n\nexport default function (name, options) {\n\n    var userDataDir = jetpack.cwd(app.getPath('userData'));\n    var stateStoreFile = 'window-state-' + name +'.json';\n    var defaultSize = {\n        width: options.width,\n        height: options.height,\n        icon: 'resources/icons/512x512.png'\n    };\n    var state = {};\n    var win;\n\n    var restore = function () {\n        var restoredState = {};\n        try {\n            restoredState = userDataDir.read(stateStoreFile, 'json');\n        } catch (err) {\n            // For some reason json can't be read (might be corrupted).\n            // No worries, we have defaults.\n        }\n        return Object.assign({}, defaultSize, restoredState);\n    };\n\n    var getCurrentPosition = function () {\n        var position = win.getPosition();\n        var size = win.getSize();\n        return {\n            x: position[0],\n            y: position[1],\n            width: size[0],\n            height: size[1]\n        };\n    };\n\n    var windowWithinBounds = function (windowState, bounds) {\n        return windowState.x >= bounds.x &&\n            windowState.y >= bounds.y &&\n            windowState.x + windowState.width <= bounds.x + bounds.width &&\n            windowState.y + windowState.height <= bounds.y + bounds.height;\n    };\n\n    var resetToDefaults = function (windowState) {\n        var bounds = screen.getPrimaryDisplay().bounds;\n        return Object.assign({}, defaultSize, {\n            x: (bounds.width - defaultSize.width) / 2,\n            y: (bounds.height - defaultSize.height) / 2\n        });\n    };\n\n    var ensureVisibleOnSomeDisplay = function (windowState) {\n        var visible = screen.getAllDisplays().some(function (display) {\n            return windowWithinBounds(windowState, display.bounds);\n        });\n        if (!visible) {\n            // Window is partially or fully not visible now.\n            // Reset it to safe defaults.\n            return resetToDefaults(windowState);\n        }\n        return windowState;\n    };\n\n    var saveState = function () {\n        if (!win.isMinimized() && !win.isMaximized()) {\n            Object.assign(state, getCurrentPosition());\n        }\n        userDataDir.write(stateStoreFile, state, { atomic: true });\n    };\n\n    state = ensureVisibleOnSomeDisplay(restore());\n\n    win = new BrowserWindow(Object.assign({}, options, state));\n\n    win.on('close', saveState);\n\n    return win;\n}\n","import { Role, Game } from '../arbitrator/Game';\nimport { expect, assert } from 'chai';\nimport { env } from 'env';\nimport { Arbitrator } from '../arbitrator/Arbitrator';\nimport { DONTCARE, checkGame } from './CheckGame';\nimport * as moment from 'moment';\nimport { PreferenceSingleton, TimePreferenceKeys } from '../arbitrator/PreferenceStore'\nimport jetpack from 'fs-jetpack';\n\nvar singleGame = jetpack.read('src/test/fixtures/singleGame.txt');\nvar basicSchedule = jetpack.read('src/test/fixtures/basicSchedule.txt');\nvar complexSchedule = jetpack.read('src/test/fixtures/complexSchedule.txt');\nvar testProfiles = jetpack.read('src/test/fixtures/testProfiles.json', 'json');\n\ndescribe(\"Arbitrator Translation Functionality\", function () {\n  beforeEach(function() {\n    var prefStore = PreferenceSingleton.instance;\n    prefStore._setLeagueProfiles(testProfiles.LeagueProfiles);\n  });\n\n  afterEach(function() {\n      var prefStore = PreferenceSingleton.instance;\n      prefStore._clearLeagueProfiles();\n  });\n\n  it (\"should have three LeagueProfiles in preferences\", function() {\n    var prefStore = PreferenceSingleton.instance;\n    expect(prefStore.getAllLeagueProfiles()).to.have.lengthOf(3);\n  });\n\n  it (\"parses a basic string with two games\", function() {\n    var arbitrator = new Arbitrator(basicSchedule);\n\n    expect(arbitrator).to.not.be.null;\n    expect(arbitrator.getNumGames()).to.equal(2);\n    expect(arbitrator.getGameById(1827)).to.be.null;\n    var firstGame = arbitrator.getGameById(1111);\n    expect(firstGame).to.not.be.null;\n\n    // TODO: This is the old way of doing things. It would be very nice if we\n    // could instead do something like:\n    // expect(firstGame).to.be.a('game').withId(1111).withGroup('106016').withRole(Role.REFEREE)...\n    checkGame(arbitrator, 1111, '106016', Role.REFEREE, 11, 9, 2013, 12, 30,\n              'U12 B', 'Bloomington Ice Garden 1', 'Bloomington',\n              'Minnetonka Black', false, false);\n    checkGame(arbitrator, 598, 'Showcase', Role.LINESMAN, 4, 26, 2014, 20, 15,\n              'U16 AAA', 'Saint Louis Park, East', 'TBA', 'TBA', false, false);\n  });\n\n  it (\"parses tournaments and scrimmages correctly\", function() {\n    var arbitrator = new Arbitrator(complexSchedule);\n    expect(arbitrator.getNumGames()).to.equal(8);\n\n    // Check the characteristics of the first game.\n    checkGame(arbitrator, 4073, DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE,\n              DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE,\n              false, true);\n\n    // Check the characteristics of the second game.\n    checkGame(arbitrator, 203, DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE,\n              DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE, DONTCARE, true);\n\n              // Check the summary strings to make sure they are reasonable.\n    var game1 = arbitrator.getGameById(4073);\n    var expectedSS1 = \"[106016] Referee (Squirt C Tournament)\";\n    expect(game1.getSummaryString()).to.equal(expectedSS1);\n\n    var game2 = arbitrator.getGameById(203);\n    var expectedSS2 = \"[106016] Referee Scrimmage New Prague v Farmington (U10 B)\";\n    expect(game2.getSummaryString()).to.equal(expectedSS2);\n  });\n\n  it (\"parses complex schedules with many games\", function() {\n    var arbitrator = new Arbitrator(complexSchedule);\n\n    expect(arbitrator.getNumGames()).to.equal(8);\n\n    // Test don't care terms.\n    checkGame(arbitrator, 330);\n\n    // Check the characteristics of the first game.\n    var prefStore = PreferenceSingleton.instance;\n    checkGame(arbitrator, 330, '106016', Role.REFEREE, 11, 8, 2014, 9, 50,\n              \"Squirt C\", \"New Prague Community Center\", \"New Prague\",\n              \"Dodge County Black\");\n\n    // Check the characteristics of the second game.\n    checkGame(arbitrator, 339, '106016', Role.REFEREE, 11, 8, 2014, 18, 45,\n              \"U10 B\", \"Eden Prairie 3\", \"Eden Prairie Red\",\n              \"Minnetonka Black\");\n\n    // Check the characteristics of the third game.\n    checkGame(arbitrator, 3839, 'MinneapHO', Role.LINESMAN, 11, 14, 2014, 20, 10,\n              \"High School Boys Varsity\", \"St. Louis Park Recreation Center\",\n              \"St Thomas Academy\", \"Minnetonka\");\n  });\n\n  it (\"does not truncate the start time\", function() {\n    var arbitrator = new Arbitrator(complexSchedule);\n    var game = arbitrator.getGameById(5629);\n\n    expect(game).to.be.ok;\n\n    expect(game.getTime12Hr()).to.equal(\"11:00am\");\n  });\n\n  it (\"outputs JSON formatted for Google calendar\", function() {\n    var arbitrator = new Arbitrator(complexSchedule);\n\n    var game = arbitrator.getGameById(5629);\n    expect(game).to.be.ok;\n\n    var gameJson = game.getEventJSON();\n    expect(gameJson).to.be.ok;\n    expect(game.getISOStartDate()).to.equal(gameJson.start.dateTime);\n    expect(game.getISOEndDate()).to.equal(gameJson.end.dateTime);\n\n    expect(game.getSite().getName()).to.equal(gameJson.location);\n    expect(game.getSummaryString()).to.equal(gameJson.summary);\n\n    var notes = \"Game starts at \" + String(game.getTime12Hr())\n      + \"\\n\\n\"\n      + game.getEncipheredGameInfoString();\n    expect(notes).to.equal(gameJson.description);\n  });\n\n  it (\"records no preparation time for consecutive games\", function() {\n    var arbitrator = new Arbitrator(complexSchedule);\n\n    var game1 = arbitrator.getGameById(5694);\n    var game2 = arbitrator.getGameById(5695);\n    expect(game1).to.be.ok;\n    expect(game2).to.be.ok;\n\n    var expectedFirstStartTime = game1.getTimestamp().subtract(30, 'minutes');\n    var expectedSecondStartTime = game2.getTimestamp();\n\n    expect(game1.getISOStartDate()).to.equal(expectedFirstStartTime.toISOString());\n    expect(game2.isConsecutiveGame()).to.be.ok;\n    expect(game2.getISOStartDate()).to.equal(expectedSecondStartTime.toISOString());\n  });\n\n  it(\"intializes preferences to sane defaults\", function() {\n    var prefStore = PreferenceSingleton.instance;\n    expect(prefStore.hasAliasedGroups()).to.be.ok;\n    expect(prefStore.hasTimePreferences()).to.not.be.ok;\n  });\n\n  it (\"recognizes time preferences set prior to parsing strings\", function() {\n    var prefStore = PreferenceSingleton.instance;\n\n    prefStore.addTimePreference(TimePreferenceKeys.PRIOR_TO_START, 61);\n    prefStore.addTimePreference(TimePreferenceKeys.LENGTH_OF_GAME, 90);\n    prefStore.addGroupAlias('106016', 'D6');\n\n    var arbitrator = new Arbitrator(basicSchedule);\n\n    expect(arbitrator.getNumGames()).to.equal(2);\n    expect(prefStore.getTimePreference(TimePreferenceKeys.PRIOR_TO_START)).to.equal(61);\n\n    var game = arbitrator.getGameById(1111);\n    expect(game.getISOStartDate()).to.equal(moment(\"11/9/2013 12:30 PM\").subtract(61, 'minutes').toISOString());\n    expect(game.getISOEndDate()).to.equal(moment(\"11/9/2013 12:30 PM\").add(90, 'minutes').toISOString());\n    assert(game.getEventJSON().description.indexOf(\"Game starts at 12:30pm\") > -1, 'the game should start at 12:30pm and this should be in the calendar event description');\n\n    prefStore.removeTimePreference(TimePreferenceKeys.PRIOR_TO_START);\n    prefStore.removeTimePreference(TimePreferenceKeys.LENGTH_OF_GAME);\n\n    expect(game.getISOEndDate()).to.equal(\"2013-11-09T19:30:00.000Z\");\n    expect(game.getISOStartDate()).to.equal(\"2013-11-09T18:00:00.000Z\");\n  });\n\n  it (\"outputs the correct start and end dates when end date is days in the future\", function() {\n    var prefStore = PreferenceSingleton.instance;\n    var arbitrator = new Arbitrator(singleGame);\n    var game = arbitrator.getGameById(5422);\n\n    expect(game).to.be.ok;\n\n    prefStore.addTimePreference(TimePreferenceKeys.PRIOR_TO_START, 60);\n    prefStore.addTimePreference(TimePreferenceKeys.LENGTH_OF_GAME, 120);\n\n    // Basic game checking\n    checkGame(arbitrator, 5422, DONTCARE, DONTCARE, 11, 22, 2014, 20, 40);\n\n    // Check ISO start and end times\n    expect(game.getISOStartDate()).to.equal(\"2014-11-23T01:40:00.000Z\");\n    expect(game.getISOEndDate()).to.equal(\"2014-11-23T04:40:00.000Z\");\n  });\n\n  it (\"correctly recognizes group aliases\", function () {\n    var prefStore = PreferenceSingleton.instance;\n    prefStore.addGroupAlias('106016', 'D6');\n\n    var testString = \"1111 \t\t106016 \tReferee 1 \t11/9/2013 Sat 12:30 PM \tD6, 12B \tBloomington Ice Garden 1 \tBloomington \tMinnetonka Black \t$29.50  Accepted on 10/18/2013\\n598 \t\tShowcase \tLinesman \t4/26/2014 Sat 8:15 PM \tHockey, 16U AAA \tSaint Louis Park, East \tTBA \tTBA \t$38.00\";\n    var arbitrator = new Arbitrator(testString);\n    checkGame(arbitrator, 1111, 'D6');\n\n    expect(prefStore.hasAliasedGroups()).to.be.ok;\n\n    prefStore.removeGroupAlias('D6');\n  });\n\n  it (\"should correctly compute an identification string and hash for valid games\", function() {\n    var arbitrator = new Arbitrator(basicSchedule);\n\n    expect(arbitrator).to.not.be.null;\n    expect(arbitrator.getNumGames()).to.equal(2);\n    expect(arbitrator.getGameById(1827)).to.be.null;\n\n    var firstGame = arbitrator.getGameById(1111);\n    expect(firstGame).to.not.be.null;\n    expect(firstGame.getIdentificationString()).to.eq(\"106016-##-1111\");\n\n    expect(firstGame.getGameInfoCipher()).to.eq('01dc268ac96e58bc8580faceb174');\n  });\n\n  it (\"should be able to resolve a game cipher back to a game id and group\", function() {\n    var gameInfo = Game.getGameInfoFromCipher('01dc268ac96e58bc8580faceb174');\n    var groupId = gameInfo.groupId;\n    var gameId = gameInfo.gameId;\n    expect(groupId).to.eq('106016');\n    expect(gameId).to.eq('1111');\n  });\n});\n","import { expect } from 'chai';\n\n// Just a gibberish string to represent a \"Don't Care\" term.\nexport var DONTCARE = 'jahjsya76817261kaqysgagasva9121879aksahdfa612';\n\n/**\n * Check the parameters of a given game. You can use this to check any game\n * against expected values, and either pass the above 'DONTCARE' constant if\n * you don't care about a given term, or leave the parameter undefined.\n *\n * @param aArbitrator The Arbitrator object used to parse the data. Cannot be undefined.\n * @param aGameId The id of the game, as an integer. Cannot be undefined.\n * @param aExpectedGroup The expected 'group' for the game.\n * @param aExpectedRole The expected role of the official for the game. Must be\n *        one of Role.LINESMAN or Role.REFEREE.\n * @param aExpectedDayOfMonth The day of the month (1-31) for the game.\n * @param aExpectedMonth The expected month of the game, as a 0-indexed integer.\n *        (0 = JANUARY, 1 = FEBRUARY, etc...).\n * @param aExpectedYear The expected year of the game, as a four digit integer.\n * @param aExpectedHourOfDay The expected hour in the day for the game, as a\n *        0-indexed integer representing 24 possible hours (0 = 1am, 1=2am,\n *        16 = 4pm, etc...)\n * @param aExpectedMinuteOfHour The expected minute of the hour for the game, as\n *        a 0-indexed integer from 0-59.\n * @param aExpectedLevel The expected level of the game, as parsed from the\n          getSportLevel() string.\n * @param aExpectedSite The site of the game, as a string. This must represent\n *        EXACTLY how the online site has it listed. No resolution of lat/long\n *        is currently performed.\n * @param aExpectedHomeTeam The name of the home team of the game.\n * @param aExpectedAwayTeam The name of the away team of the game.\n * @param aExpectScrimmage Whether or not this game is expected to be a scrimmage\n * @param aExpectTournament Whether or not this game is expected to be a\n *        tournament game.\n */\nexport var checkGame = function (aArbitrator, aGameId, aExpectedGroup,\n                                 aExpectedRole, aExpectedMonth,\n                                 aExpectedDayOfMonth, aExpectedYear,\n                                 aExpectedHourOfDay, aExpectedMinuteOfHour,\n                                 aExpectedLevel, aExpectedSite,\n                                 aExpectedHomeTeam, aExpectedAwayTeam,\n                                 aExpectScrimmage, aExpectTournament) {\n  // Only the game id and arbitrator must be present. All other things can be\n  // undefined, indicating a \"don't care\" term.\n  expect(aArbitrator).to.be.ok;\n  expect(aGameId).to.be.ok;\n\n  var game = aArbitrator.getGameById(aGameId);\n  expect(game).to.be.ok;\n\n  if (aExpectedGroup && aExpectedGroup != DONTCARE) {\n    expect(game.getGroup()).to.equal(aExpectedGroup);\n  }\n\n  if (aExpectedRole && aExpectedRole != DONTCARE) {\n    expect(game.getRole()).to.equal(aExpectedRole);\n  }\n\n  var moment = game.getTimestamp();\n  if (aExpectedMonth && aExpectedMonth != DONTCARE) {\n    expect(moment.month()+1).to.equal(aExpectedMonth);\n  }\n\n  if (aExpectedDayOfMonth && aExpectedDayOfMonth != DONTCARE) {\n    expect(moment.date()).to.equal(aExpectedDayOfMonth);\n  }\n\n  if (aExpectedYear && aExpectedYear != DONTCARE) {\n    expect(moment.year()).to.equal(aExpectedYear);\n  }\n\n  if (aExpectedHourOfDay && aExpectedHourOfDay != DONTCARE) {\n    expect(moment.hour()).to.equal(aExpectedHourOfDay);\n  }\n\n  if (aExpectedMinuteOfHour && aExpectedMinuteOfHour != DONTCARE) {\n    expect(moment.minute()).to.equal(aExpectedMinuteOfHour);\n  }\n\n  if (aExpectedLevel && aExpectedLevel != DONTCARE) {\n    expect(game.getLevel()).to.equal(aExpectedLevel);\n  }\n\n  if (aExpectedSite && aExpectedSite != DONTCARE) {\n    expect(game.getSite().getName()).to.equal(aExpectedSite);\n  }\n\n  if (aExpectedHomeTeam && aExpectedHomeTeam != DONTCARE) {\n    expect(game.getHomeTeam()).to.equal(aExpectedHomeTeam);\n  }\n\n  if (aExpectedAwayTeam && aExpectedAwayTeam != DONTCARE) {\n    expect(game.getAwayTeam()).to.equal(aExpectedAwayTeam);\n  }\n\n  if (aExpectScrimmage && aExpectScrimmage != DONTCARE) {\n    if (aExpectTournament && aExpectTournament != DONTCARE) {\n\n      assert.fail(isExpectScrimmage, isExpectTournament, 'cannot have a game that is both a tournament game and a scrimmage');\n    }\n\n    expect(game.isScrimmage()).to.equal(aExpectScrimmage);\n  }\n\n  if (aExpectTournament && aExpectTournament != DONTCARE) {\n    expect(game.isTournament()).to.equal(aExpectTournament);\n  }\n}\n","import { expect, assert } from 'chai';\nimport { DeviceInfoSingleton } from '../arbitrator/DeviceInfo';\n\nvar deviceInfo = DeviceInfoSingleton.instance;\n\ndescribe(\"Hardware-Specific Device Information Retrieval\", function () {\n  it (\"should retrieve the same encrypted machine key for multiple queries within a single session\", function(done) {\n    deviceInfo.getEncryptedDeviceKey()\n      .then((machineKey1) => {\n        expect(machineKey1).to.have.lengthOf(64);\n        deviceInfo.getEncryptedDeviceKey()\n          .then((machineKey2) => {\n            expect(machineKey2).to.have.lengthOf(64);\n            expect(machineKey1).to.eq(machineKey2);\n            done();\n          })\n          .catch((error) => {\n            done(error);\n          });\n      })\n      .catch((error) => {\n        done(error);\n      });\n  });\n\n  it (\"is able to retrieve an encrypted machine key of length 64 bytes\", function (done) {\n    deviceInfo.getEncryptedDeviceKey()\n      .then((machineKey) => {\n        expect(machineKey).to.have.lengthOf(64);\n        done();\n      })\n      .catch((error) => {\n        done(error);\n      });\n  });\n\n  it (\"is able to retrieve a machine identifer which is a collection of other attributes\", function (done) {\n    deviceInfo.getMachineIdentifier()\n      .then((machineId) => {\n        deviceInfo.getMacAddress()\n          .then((macAddress) => {\n            var expectedMachineId = deviceInfo.getOSName()\n              + deviceInfo.getOSVersion()\n              + deviceInfo.getCPUModel()\n              + macAddress;\n\n              expect(machineId).to.eql(expectedMachineId);\n              done();\n          })\n          .catch((aError) => {\n            done(aError);\n          });\n      })\n      .catch((error) => {\n        done(error);\n      });\n  });\n\n  it (\"is able to retrieve the OS version\", function() {\n    expect(deviceInfo.getOSVersion()).to.not.be.null;\n  });\n\n  it (\"is able to retrieve the OS platform name\", function() {\n    expect(deviceInfo.getOSName()).to.not.be.null;\n  });\n\n  it (\"is able to retrieve the CPU model\", function () {\n    var cpuModel = deviceInfo.getCPUModel();\n    expect(cpuModel).to.not.be.null;\n  });\n\n  it (\"is able to retrieve the device mac address\", function(done) {\n    deviceInfo.getMacAddress()\n    .then((macAddress) => {\n      // The device's mac address should be 6 sets of two hexidecimal digits.\n      var numSections = macAddress.split(':');\n      expect(numSections).to.have.lengthOf(6);\n      for (var i = 0; i < numSections.length; i++) {\n        var section = numSections[i];\n        expect(section).to.have.lengthOf(2);\n      }\n\n      done();\n    })\n    .catch((error) => {\n      done(error);\n    });\n  });\n});\n","import { LeagueProfile, GameClassificationLevel } from '../arbitrator/LeagueProfile';\nimport { expect, assert } from 'chai';\n\ndescribe('Game Classification and Level Parsing Functionality', () => {\n  it('should be able to create GameClassificationLevel objects', () => {\n    var gal = new GameClassificationLevel('Bantam', 'A', '.*');\n    expect(gal).to.not.be.null;\n    expect(gal.getClassification()).to.eq('Bantam');\n    expect(gal.getLevel()).to.eq('A');\n    expect(gal.matches(\"Hockey, Bantam A / AA\")).to.eq(true);\n  });\n\n  it ('should recognize \"D6, BB214 Tournament\" as a Bantam level B2 game', () => {\n    var gal = new GameClassificationLevel('Bantam', 'B2', '[Bantam|B](.*)[B2]');\n    expect(gal).to.not.be.null;\n    expect(gal.getClassification()).to.eq('Bantam');\n    expect(gal.getLevel()).to.eq('B2');\n    expect(gal.matches(\"D6, BB214 Tournament\")).to.eq(true);\n  });\n\n  it ('should not recognize \"Hockey, Bantam A / AA\" as a Bantam level B2 game', () => {\n    var gal = new GameClassificationLevel('Bantam', 'B2', '[Bantam|B](.*)[B2]');\n    expect(gal).to.not.be.null;\n    expect(gal.getClassification()).to.eq('Bantam');\n    expect(gal.getLevel()).to.eq('B2');\n    expect(gal.matches(\"Hockey, Bantam A / AA\")).to.eq(false);\n  });\n\n  it ('should be able to remove GameClassificationLevel objects from a LeagueProfile', function() {\n    var gal1 = new GameClassificationLevel('Bantam', 'A', '.*');\n    var gal2 = new GameClassificationLevel('[Bantam|B](.*)[B2]', 'Bantam', 'B2');\n    var gameProfile = new LeagueProfile('dontcare');\n    gameProfile.addGameClassificationLevel(gal1);\n    gameProfile.addGameClassificationLevel(gal2);\n\n    expect(gameProfile.getLevels()).to.have.lengthOf(2);\n\n    gameProfile.removeGameClassificationLevel(gal2);\n\n    expect(gameProfile.getLevels()).to.have.lengthOf(1);\n  });\n});\n","import { PreferenceSingleton, TimePreferenceKeys } from '../arbitrator/PreferenceStore';\nimport { expect } from 'chai';\nimport { LeagueProfile, GameClassificationLevel } from '../arbitrator/LeagueProfile';\nimport jetpack from 'fs-jetpack';\n\nvar testProfiles = jetpack.read('src/test/fixtures/testProfiles.json', 'json');\n\ndescribe(\"Preference Storage and Retrieval\", function () {\n  it (\"is able to retrieve an instance of the PreferenceStore\", function() {\n    var prefStore = PreferenceSingleton.instance;\n    expect(prefStore).to.be.ok;\n  });\n\n  it (\"is able to set a preference in a single instance and retrieve it in another\", function() {\n    var prefStore1 = PreferenceSingleton.instance;\n    var prefStore2 = PreferenceSingleton.instance;\n\n    prefStore1.addTimePreference(TimePreferenceKeys.PRIOR_TO_START, 61);\n\n    expect(prefStore2.getTimePreference(TimePreferenceKeys.PRIOR_TO_START)).to.equal(61);\n  });\n\n  it (\"is able to add a new game age profile and subsequently retrieve it\", function() {\n    var prefStore = PreferenceSingleton.instance;\n\n    var profile = new LeagueProfile('D6');\n    profile.addGameClassificationLevel(new GameClassificationLevel('Bantam', 'B2', '[Bantam|B](.*)[B2]'));\n\n    prefStore.addLeagueProfile(profile);\n\n    expect(prefStore.getLeagueProfile('D6')).to.not.be.null;\n    expect(prefStore.getLeagueProfile('D6').getNumLevels()).to.eq(1);\n    var GameClassificationLevelMatching = prefStore.getLeagueProfile('D6').findGameClassificationLevelMatching('D6, BB214 Tournament');\n    expect(GameClassificationLevelMatching).to.not.be.null;\n    expect(GameClassificationLevelMatching.getClassification()).to.eq('Bantam');\n    expect(GameClassificationLevelMatching.getLevel()).to.eq('B2');\n  });\n\n  it (\"should return an array of GameClassificationLevel objects that are sorted first by age then by level\", function() {\n    var prefStore = PreferenceSingleton.instance;\n    prefStore._setLeagueProfiles(testProfiles.LeagueProfiles);\n\n    var district6Profile = prefStore.getLeagueProfile('106016');\n    expect(district6Profile).to.not.be.null;\n\n    var levels = district6Profile.getLevels();\n\n    expect(levels).to.have.lengthOf(5);\n    expect(levels[0].getClassification()).to.eq('Squirt');\n    expect(levels[0].getLevel()).to.eq('B');\n    expect(levels[1].getClassification()).to.eq('Squirt');\n    expect(levels[1].getLevel()).to.eq('C');\n    expect(levels[2].getClassification()).to.eq('U10');\n    expect(levels[3].getClassification()).to.eq('U12');\n    expect(levels[4].getClassification()).to.eq('U15');\n\n    prefStore._clearLeagueProfiles();\n  });\n\n  it (\"is able to update an existing LeagueProfile to add new values\", function() {\n    var prefStore = PreferenceSingleton.instance;\n\n    var profile = new LeagueProfile('D6');\n    profile.addGameClassificationLevel(new GameClassificationLevel('Bantam', 'B2', '[Bantam|B](.*)[B2]'));\n\n    prefStore.addLeagueProfile(profile);\n\n    profile.addGameClassificationLevel(new GameClassificationLevel('Squirt', 'A', '.*'));\n    prefStore.setLeagueProfile(profile);\n\n    var retrieved = prefStore.getLeagueProfile('D6');\n    expect(retrieved).to.not.be.null;\n    expect(retrieved.getNumLevels()).to.eq(2);\n  });\n\n  it ('is able to add a series of group aliases and get their names in alpha order', function() {\n    var prefStore = PreferenceSingleton.instance;\n\n    prefStore.addGroupAlias('106016', 'District 6');\n    prefStore.addGroupAlias('MinneapHO', 'MHOA');\n\n    var aliasNames = prefStore.getAllGroupAliasNamesAsSortedArray();\n    expect(aliasNames).to.have.lengthOf(4);\n    expect(aliasNames[0]).to.eq('District 6');\n    expect(aliasNames[1]).to.eq('MHOA');\n    expect(aliasNames[2]).to.eq('OSL');\n    expect(aliasNames[3]).to.eq('Showcase');\n  });\n});\n","import { expect } from 'chai';\nimport { QuickCrypto } from '../arbitrator/QuickCrypto';\n\ndescribe ('Quick Cryptological Functions', function() {\n  var quickCrypto = new QuickCrypto();\n  it (\"should be able to decrypt a previously encrypted password\", function(done) {\n    var expectedPassword = 'somePasswordThatMayOrMayNotBeSecure';\n    quickCrypto.encrypt(expectedPassword)\n      .then((encryptedVersion) => {\n        expect(encryptedVersion).to.not.be.empty;\n        quickCrypto.decrypt(encryptedVersion)\n          .then((decryptedVersion) => {\n            expect(decryptedVersion).to.not.be.empty;\n            expect(expectedPassword).to.eq(decryptedVersion);\n            done();\n          })\n          .catch((error) => {\n            done(error);\n          });\n      })\n      .catch((error) => {\n        done(error);\n      });\n  });\n\n  it (\"should be able to encrypt a password\", function(done) {\n    quickCrypto.encrypt('somePasswordThatMayOrMayNotBeSecure')\n      .then((encryptedVersion) => {\n        expect(encryptedVersion).to.not.be.empty;\n        done();\n      })\n      .catch((error) => {\n        done(error);\n      });\n  });\n});\n","import \"../src/test/Arbitrator.spec.js\";\nimport \"../src/test/DeviceInfo.spec.js\";\nimport \"../src/test/LeagueProfile.spec.js\";\nimport \"../src/test/PreferenceStore.spec.js\";\nimport \"../src/test/QuickCrypto.spec.js\";\n","module.exports = require(\"@google/maps\");","module.exports = require(\"chai\");","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"googleapis\");","module.exports = require(\"jquery\");","module.exports = require(\"lockr\");","module.exports = require(\"macaddress\");","module.exports = require(\"moment\");","module.exports = require(\"node-rest-client\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"typeahead\");","module.exports = require(\"util\");"],"sourceRoot":""}